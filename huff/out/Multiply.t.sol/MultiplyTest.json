{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multiply",
      "outputs": [
        {
          "internalType": "contract Multiply",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "testMultiply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "callData",
          "type": "bytes32"
        }
      ],
      "name": "testNonMatchingSelector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002c575f80fd5b506113c58061003a5f395ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806385226c8111610093578063c176f9f311610063578063c176f9f3146101a6578063e20c9f71146101b9578063f3593cd0146101c1578063fa7626d4146101ec575f80fd5b806385226c8114610169578063916a17c61461017e578063b5508aa914610186578063ba414fa61461018e575f80fd5b80632ade3880116100ce5780632ade38801461012f5780633e5e3c23146101445780633f7286f41461014c57806366d9a9a014610154575f80fd5b8063042116f1146100f45780630a9254e4146101095780631ed7831c14610111575b5f80fd5b610107610102366004610f76565b6101f9565b005b6101076103b8565b6101196104c7565b6040516101269190610f96565b60405180910390f35b610137610527565b604051610126919061102f565b610119610663565b6101196106c1565b61015c61071f565b60405161012691906110ee565b610171610800565b604051610126919061119f565b61015c6108cb565b6101716109ac565b610196610a77565b6040519015158152602001610126565b6101076101b43660046111ff565b610b9d565b610119610c1c565b601c546101d4906001600160a01b031681565b6040516001600160a01b039091168152602001610126565b6007546101969060ff1681565b8015806102165750808183028161021257610212611216565b0482145b156102d157601c54604051630b2e250b60e11b815260048101849052602481018390526102cd916001600160a01b03169063165c4a1690604401602060405180830381865afa15801561026b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061028f919061122a565b8284026040518060400160405280601f81526020017f57726f6e6720726573756c7420666f72204d756c7469706c7928612c20622900815250610c7a565b5050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c6001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561032b575f80fd5b505af115801561033d573d5f803e3d5ffd5b5050601c54604051630b2e250b60e11b815260048101869052602481018590526001600160a01b03909116925063165c4a169150604401602060405180830381865afa15801561038f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b3919061122a565b505050565b73__$9f92e841da69003274da36affccf96c962$__6379502c556040518163ffffffff1660e01b8152600401602060405180830381865af41580156103ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104239190611258565b6040516363b0118b60e11b81526020600482015260086024820152674d756c7469706c7960c01b60448201526001600160a01b03919091169063c7602316906064016020604051808303815f875af1158015610481573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a59190611258565b601c80546001600160a01b0319166001600160a01b0392909216919091179055565b6060601480548060200260200160405190810160405280929190818152602001828054801561051d57602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116104ff575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101561065a575f84815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015610643578382905f5260205f200180546105b890611273565b80601f01602080910402602001604051908101604052809291908181526020018280546105e490611273565b801561062f5780601f106106065761010080835404028352916020019161062f565b820191905f5260205f20905b81548152906001019060200180831161061257829003601f168201915b50505050508152602001906001019061059b565b50505050815250508152602001906001019061054a565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801561051d57602002820191905f5260205f209081546001600160a01b031681526001909101906020018083116104ff575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801561051d57602002820191905f5260205f209081546001600160a01b031681526001909101906020018083116104ff575050505050905090565b60606019805480602002602001604051908101604052809291908181526020015f905b8282101561065a575f8481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107e857602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107aa5790505b50505050508152505081526020019060010190610742565b60606018805480602002602001604051908101604052809291908181526020015f905b8282101561065a578382905f5260205f2001805461084090611273565b80601f016020809104026020016040519081016040528092919081815260200182805461086c90611273565b80156108b75780601f1061088e576101008083540402835291602001916108b7565b820191905f5260205f20905b81548152906001019060200180831161089a57829003601f168201915b505050505081526020019060010190610823565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101561065a575f8481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561099457602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116109565790505b505050505081525050815260200190600101906108ee565b60606017805480602002602001604051908101604052809291908181526020015f905b8282101561065a578382905f5260205f200180546109ec90611273565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1890611273565b8015610a635780601f10610a3a57610100808354040283529160200191610a63565b820191905f5260205f20905b815481529060010190602001808311610a4657829003601f168201915b5050505050815260200190600101906109cf565b6007545f90610100900460ff1615610a985750600754610100900460ff1690565b5f737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b985760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093525f929091610b24917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016112ab565b60408051601f1981840301815290829052610b3e916112db565b5f604051808303815f865af19150503d805f8114610b77576040519150601f19603f3d011682016040523d82523d5f602084013e610b7c565b606091505b5091505080806020019051810190610b9491906112f6565b9150505b919050565b6040805160018082528183019092525f916020808301908036833701905050905063165c4a1660e01b815f81518110610bd857610bd8611315565b6001600160e01b031990921660209283029190910190910152601c545f90610c0c90839085906001600160a01b0316610cc2565b905080156103b3576103b3611329565b6060601380548060200260200160405190810160405280929190818152602001828054801561051d57602002820191905f5260205f209081546001600160a01b031681526001909101906020018083116104ff575050505050905090565b8183146103b3577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610cb0919061133d565b60405180910390a16103b38383610d4d565b5f82815b8551811015610d1f57858181518110610ce157610ce1611315565b60200260200101516001600160e01b031916826001600160e01b03191603610d0d575f92505050610d46565b80610d178161136b565b915050610cc6565b505f846080525f8060206080875afa905080610d42575f80602060805f885af190505b9150505b9392505050565b8082146102cd577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610dbe9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16102cd737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610f655760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b92820192909252600160608201525f91907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610f0892916020016112ab565b60408051601f1981840301815290829052610f22916112db565b5f604051808303815f865af19150503d805f8114610f5b576040519150601f19603f3d011682016040523d82523d5f602084013e610f60565b606091505b505050505b6007805461ff001916610100179055565b5f8060408385031215610f87575f80fd5b50508035926020909101359150565b602080825282518282018190525f9190848201906040850190845b81811015610fd65783516001600160a01b031683529284019291840191600101610fb1565b50909695505050505050565b5f5b83811015610ffc578181015183820152602001610fe4565b50505f910152565b5f815180845261101b816020860160208601610fe2565b601f01601f19169290920160200192915050565b602080825282518282018190525f919060409081850190600581811b8701840188860187805b858110156110de57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156110c857605f198985030183526110b6848651611004565b948e01949350918d019160010161109a565b505050978a019794505091880191600101611055565b50919a9950505050505050505050565b5f6020808301818452808551808352604092508286019150828160051b8701018488015f805b8481101561119057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101561117b5783516001600160e01b0319168252928b019260019290920191908b0190611151565b50978a01979550505091870191600101611114565b50919998505050505050505050565b5f602080830181845280855180835260408601915060408160051b87010192508387015f5b828110156111f257603f198886030184526111e0858351611004565b945092850192908501906001016111c4565b5092979650505050505050565b5f6020828403121561120f575f80fd5b5035919050565b634e487b7160e01b5f52601260045260245ffd5b5f6020828403121561123a575f80fd5b5051919050565b6001600160a01b0381168114611255575f80fd5b50565b5f60208284031215611268575f80fd5b8151610d4681611241565b600181811c9082168061128757607f821691505b6020821081036112a557634e487b7160e01b5f52602260045260245ffd5b50919050565b6001600160e01b03198316815281515f906112cd816004850160208701610fe2565b919091016004019392505050565b5f82516112ec818460208701610fe2565b9190910192915050565b5f60208284031215611306575f80fd5b81518015158114610d46575f80fd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52600160045260245ffd5b60408152600560408201526422b93937b960d91b6060820152608060208201525f610d466080830184611004565b5f6001820161138857634e487b7160e01b5f52601160045260245ffd5b506001019056fea26469706673582212200f5bde34f3c9b78c7162a3d6658656b608b3fe92a7be9e376cded51fa8e1379d64736f6c63430008150033",
    "sourceMap": "402:907:34:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;402:907:34;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "lib/foundry-huff/src/HuffDeployer.sol": {
        "HuffDeployer": [
          {
            "start": 1012,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806385226c8111610093578063c176f9f311610063578063c176f9f3146101a6578063e20c9f71146101b9578063f3593cd0146101c1578063fa7626d4146101ec575f80fd5b806385226c8114610169578063916a17c61461017e578063b5508aa914610186578063ba414fa61461018e575f80fd5b80632ade3880116100ce5780632ade38801461012f5780633e5e3c23146101445780633f7286f41461014c57806366d9a9a014610154575f80fd5b8063042116f1146100f45780630a9254e4146101095780631ed7831c14610111575b5f80fd5b610107610102366004610f76565b6101f9565b005b6101076103b8565b6101196104c7565b6040516101269190610f96565b60405180910390f35b610137610527565b604051610126919061102f565b610119610663565b6101196106c1565b61015c61071f565b60405161012691906110ee565b610171610800565b604051610126919061119f565b61015c6108cb565b6101716109ac565b610196610a77565b6040519015158152602001610126565b6101076101b43660046111ff565b610b9d565b610119610c1c565b601c546101d4906001600160a01b031681565b6040516001600160a01b039091168152602001610126565b6007546101969060ff1681565b8015806102165750808183028161021257610212611216565b0482145b156102d157601c54604051630b2e250b60e11b815260048101849052602481018390526102cd916001600160a01b03169063165c4a1690604401602060405180830381865afa15801561026b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061028f919061122a565b8284026040518060400160405280601f81526020017f57726f6e6720726573756c7420666f72204d756c7469706c7928612c20622900815250610c7a565b5050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c6001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561032b575f80fd5b505af115801561033d573d5f803e3d5ffd5b5050601c54604051630b2e250b60e11b815260048101869052602481018590526001600160a01b03909116925063165c4a169150604401602060405180830381865afa15801561038f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b3919061122a565b505050565b73__$9f92e841da69003274da36affccf96c962$",
    "sourceMap": "402:907:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:338;;;;;;:::i;:::-;;:::i;:::-;;496:102;;;:::i;2452:134:6:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;2738:178::-;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;2157:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;5753:14:45;;5746:22;5728:41;;5716:2;5701:18;1819:584:0;5588:187:45;1006:301:34;;;;;;:::i;:::-;;:::i;2304:142:6:-;;;:::i;465:24:34:-;;;;;-1:-1:-1;;;;;465:24:34;;;;;;-1:-1:-1;;;;;6147:32:45;;;6129:51;;6117:2;6102:18;465:24:34;5965:221:45;1572:26:0;;;;;;;;;604:338:34;693:6;;;:26;;;718:1;713;709;:5;708:11;;;;;:::i;:::-;;703:1;:16;693:26;689:237;;;748:8;;:23;;-1:-1:-1;;;748:23:34;;;;;6497:25:45;;;6538:18;;;6531:34;;;739:75:34;;-1:-1:-1;;;;;748:8:34;;:17;;6470:18:45;;748:23:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;777:1;773;:5;739:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;604:338;;:::o;689:237::-;317:28:1;309:37;;-1:-1:-1;;;;;853:15:34;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;888:8:34;;:23;;-1:-1:-1;;;888:23:34;;;;;6497:25:45;;;6538:18;;;6531:34;;;-1:-1:-1;;;;;888:8:34;;;;-1:-1:-1;888:17:34;;-1:-1:-1;6470:18:45;;888:23:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;604:338;;:::o;496:102::-;550:12;:19;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;-1:-1:-1;;;550:40:34;;7403:2:45;550:40:34;;;7385:21:45;7442:1;7422:18;;;7415:29;-1:-1:-1;;;7460:18:45;;;7453:38;-1:-1:-1;;;;;550:28:34;;;;;;;7508:18:45;;550:40:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;530:8;:61;;-1:-1:-1;;;;;;530:61:34;-1:-1:-1;;;;;530:61:34;;;;;;;;;;496:102::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;8364:51:45;;;-1:-1:-1;;;8431:18:45;;;8424:34;2196:43:0;;;;;;;;;8337:18:45;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1006:301:34:-;1107:15;;;1120:1;1107:15;;;;;;;;;1074:30;;1107:15;;;;;;;;;;;-1:-1:-1;1107:15:34;1074:48;;1152:26;;;1132:14;1147:1;1132:17;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1132:46:34;;;:17;;;;;;;;;;;:46;1264:8;;1189:12;;1204:70;;1230:14;;1246:8;;-1:-1:-1;;;;;1264:8:34;1204:25;:70::i;:::-;1189:85;;1292:7;1291:8;1284:16;;;;:::i;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;5476:178:0:-;5557:1;5552;:6;5548:100;;5579:30;5605:3;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;152:709:44:-;287:4;337:8;287:4;357:161;381:14;:21;377:1;:25;357:161;;;444:14;459:1;444:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;427:34:44;;:13;-1:-1:-1;;;;;427:34:44;;;423:85;;488:5;481:12;;;;;;423:85;404:3;;;;:::i;:::-;;;;357:161;;;;528:12;594:8;588:4;581:22;731:1;728;722:4;716;708:6;701:5;690:43;679:54;;757:7;747:74;;817:1;814;808:4;802;799:1;791:6;784:5;779:40;768:51;;747:74;847:7;-1:-1:-1;;152:709:44;;;;;;:::o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;10718:2:45;10700:21;;;10757:2;10737:18;;;10730:30;10796:34;10791:2;10776:18;;10769:62;-1:-1:-1;;;10862:2:45;10847:18;;10840:32;10904:3;10889:19;;10516:398;5293:41:0;;;;;;;;5353:31;;;11131:21:45;;;11188:2;11168:18;;;11161:30;-1:-1:-1;;;11222:2:45;11207:18;;11200:40;11307:4;11292:20;;11285:36;;;5353:31:0;;;;;;;11272:3:45;5353:31:0;;;5403;;;11544:21:45;;;11601:2;11581:18;;;11574:30;-1:-1:-1;;;11635:2:45;11620:18;;11613:40;11720:4;11705:20;;11698:36;;;5403:31:0;;;;;;;11685:3:45;5403:31:0;;;5448:6;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;11947:51:45;;;-1:-1:-1;;;12014:18:45;;;12007:34;;;;2712:4:0;12057:18:45;;;12050:34;2489:11:0;;1671:64;2586:43;;11920:18:45;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;14:248:45:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:45;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:45:o;267:658::-;438:2;490:21;;;560:13;;463:18;;;582:22;;;409:4;;438:2;661:15;;;;635:2;620:18;;;409:4;704:195;718:6;715:1;712:13;704:195;;;783:13;;-1:-1:-1;;;;;779:39:45;767:52;;874:15;;;;839:12;;;;815:1;733:9;704:195;;;-1:-1:-1;916:3:45;;267:658;-1:-1:-1;;;;;;267:658:45:o;930:250::-;1015:1;1025:113;1039:6;1036:1;1033:13;1025:113;;;1115:11;;;1109:18;1096:11;;;1089:39;1061:2;1054:10;1025:113;;;-1:-1:-1;;1172:1:45;1154:16;;1147:27;930:250::o;1185:271::-;1227:3;1265:5;1259:12;1292:6;1287:3;1280:19;1308:76;1377:6;1370:4;1365:3;1361:14;1354:4;1347:5;1343:16;1308:76;:::i;:::-;1438:2;1417:15;-1:-1:-1;;1413:29:45;1404:39;;;;1445:4;1400:50;;1185:271;-1:-1:-1;;1185:271:45:o;1461:1742::-;1694:2;1746:21;;;1816:13;;1719:18;;;1838:22;;;1665:4;;1694:2;1879;;1897:18;;;;1934:1;1977:15;;;1962:31;;1958:40;;2021:15;;;1665:4;;2085:1089;2101:6;2096:3;2093:15;2085:1089;;;-1:-1:-1;;2170:22:45;;;2166:36;2154:49;;2226:13;;2313:9;;-1:-1:-1;;;;;2309:35:45;2294:51;;2384:11;;2378:18;2416:15;;;2409:27;;;2497:19;;2266:15;;;2529:24;;;2710:21;;;;2576:2;2658:17;;;2646:30;;2642:39;;;2600:15;;;;2755:1;2769:296;2785:8;2780:3;2777:17;2769:296;;;2891:2;2887:7;2878:6;2870;2866:19;2862:33;2855:5;2848:48;2923:42;2958:6;2947:8;2941:15;2923:42;:::i;:::-;2994:17;;;;2913:52;-1:-1:-1;3037:14:45;;;;2813:1;2804:11;2769:296;;;-1:-1:-1;;;3152:12:45;;;;3088:6;-1:-1:-1;;3117:15:45;;;;2127:1;2118:11;2085:1089;;;-1:-1:-1;3191:6:45;;1461:1742;-1:-1:-1;;;;;;;;;;1461:1742:45:o;3208:1567::-;3410:4;3439:2;3479;3468:9;3464:18;3509:2;3498:9;3491:21;3532:6;3567;3561:13;3598:6;3590;3583:22;3624:2;3614:12;;3657:2;3646:9;3642:18;3635:25;;3719:2;3709:6;3706:1;3702:14;3691:9;3687:30;3683:39;3757:2;3749:6;3745:15;3778:1;3799;3809:937;3825:6;3820:3;3817:15;3809:937;;;3894:22;;;-1:-1:-1;;3890:36:45;3878:49;;3950:13;;4037:9;;-1:-1:-1;;;;;4033:35:45;4018:51;;4108:11;;4102:18;4140:15;;;4133:27;;;4221:19;;3990:15;;;4253:24;;;4343:21;;;;4388:1;;4311:2;4299:15;;;4402:236;4418:8;4413:3;4410:17;4402:236;;;4499:15;;-1:-1:-1;;;;;;4495:42:45;4481:57;;4607:17;;;;4446:1;4437:11;;;;;4564:14;;;;4402:236;;;-1:-1:-1;4724:12:45;;;;4661:5;-1:-1:-1;;;4689:15:45;;;;3851:1;3842:11;3809:937;;;-1:-1:-1;4763:6:45;;3208:1567;-1:-1:-1;;;;;;;;;3208:1567:45:o;4780:803::-;4942:4;4971:2;5011;5000:9;4996:18;5041:2;5030:9;5023:21;5064:6;5099;5093:13;5130:6;5122;5115:22;5168:2;5157:9;5153:18;5146:25;;5230:2;5220:6;5217:1;5213:14;5202:9;5198:30;5194:39;5180:53;;5268:2;5260:6;5256:15;5289:1;5299:255;5313:6;5310:1;5307:13;5299:255;;;5406:2;5402:7;5390:9;5382:6;5378:22;5374:36;5369:3;5362:49;5434:40;5467:6;5458;5452:13;5434:40;:::i;:::-;5424:50;-1:-1:-1;5532:12:45;;;;5497:15;;;;5335:1;5328:9;5299:255;;;-1:-1:-1;5571:6:45;;4780:803;-1:-1:-1;;;;;;;4780:803:45:o;5780:180::-;5839:6;5892:2;5880:9;5871:7;5867:23;5863:32;5860:52;;;5908:1;5905;5898:12;5860:52;-1:-1:-1;5931:23:45;;5780:180;-1:-1:-1;5780:180:45:o;6191:127::-;6252:10;6247:3;6243:20;6240:1;6233:31;6283:4;6280:1;6273:15;6307:4;6304:1;6297:15;6576:184;6646:6;6699:2;6687:9;6678:7;6674:23;6670:32;6667:52;;;6715:1;6712;6705:12;6667:52;-1:-1:-1;6738:16:45;;6576:184;-1:-1:-1;6576:184:45:o;6765:143::-;-1:-1:-1;;;;;6852:31:45;;6842:42;;6832:70;;6898:1;6895;6888:12;6832:70;6765:143;:::o;6913:283::-;7003:6;7056:2;7044:9;7035:7;7031:23;7027:32;7024:52;;;7072:1;7069;7062:12;7024:52;7104:9;7098:16;7123:43;7160:5;7123:43;:::i;7805:380::-;7884:1;7880:12;;;;7927;;;7948:61;;8002:4;7994:6;7990:17;7980:27;;7948:61;8055:2;8047:6;8044:14;8024:18;8021:38;8018:161;;8101:10;8096:3;8092:20;8089:1;8082:31;8136:4;8133:1;8126:15;8164:4;8161:1;8154:15;8018:161;;7805:380;;;:::o;8469:384::-;-1:-1:-1;;;;;;8654:33:45;;8642:46;;8711:13;;8624:3;;8733:74;8711:13;8796:1;8787:11;;8780:4;8768:17;;8733:74;:::i;:::-;8827:16;;;;8845:1;8823:24;;8469:384;-1:-1:-1;;;8469:384:45:o;8858:287::-;8987:3;9025:6;9019:13;9041:66;9100:6;9095:3;9088:4;9080:6;9076:17;9041:66;:::i;:::-;9123:16;;;;;8858:287;-1:-1:-1;;8858:287:45:o;9150:277::-;9217:6;9270:2;9258:9;9249:7;9245:23;9241:32;9238:52;;;9286:1;9283;9276:12;9238:52;9318:9;9312:16;9371:5;9364:13;9357:21;9350:5;9347:32;9337:60;;9393:1;9390;9383:12;9564:127;9625:10;9620:3;9616:20;9613:1;9606:31;9656:4;9653:1;9646:15;9680:4;9677:1;9670:15;9696:127;9757:10;9752:3;9748:20;9745:1;9738:31;9788:4;9785:1;9778:15;9812:4;9809:1;9802:15;9828:446;10078:2;10067:9;10060:21;10117:1;10112:2;10101:9;10097:18;10090:29;-1:-1:-1;;;10150:2:45;10139:9;10135:18;10128:35;10201:3;10194:4;10183:9;10179:20;10172:33;10041:4;10222:46;10263:3;10252:9;10248:19;10240:6;10222:46;:::i;10279:232::-;10318:3;10339:17;;;10336:140;;10398:10;10393:3;10389:20;10386:1;10379:31;10433:4;10430:1;10423:15;10461:4;10458:1;10451:15;10336:140;-1:-1:-1;10503:1:45;10492:13;;10279:232::o",
    "linkReferences": {
      "lib/foundry-huff/src/HuffDeployer.sol": {
        "HuffDeployer": [
          {
            "start": 954,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "multiply()": "f3593cd0",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testMultiply(uint256,uint256)": "042116f1",
    "testNonMatchingSelector(bytes32)": "c176f9f3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiply\",\"outputs\":[{\"internalType\":\"contract Multiply\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"testMultiply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"callData\",\"type\":\"bytes32\"}],\"name\":\"testNonMatchingSelector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testNonMatchingSelector(bytes32)\":{\"notice\":\"Test that a non-matching selector reverts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Multiply.t.sol\":\"MultiplyTest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-huff/=lib/foundry-huff/src/\",\":solidity-stringutils/=lib/foundry-huff/lib/solidity-stringutils/\",\"lib/foundry-huff:stringutils/=lib/foundry-huff/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x598b85609125830885b8fb54a18f447d04f8dd799aca3de81baef35eb6b783c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9c128aae4f5668d8c8f71e9e6d9379d8451b8713d139cb66a02d23bc1c75f69\",\"dweb:/ipfs/QmVRihXHWi2yg9CcAhzKf63Y7m6gWz4P1giGMhXUHT3DFu\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x87ba9f3edc254e529db9e3129c954391adcc7fc8574203767979d8d2f1e724b9\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4d16c08d80d9f2869deb6350642cf5af624d21fce6b3b023abbcdedc62e195fe\",\"dweb:/ipfs/QmURpnnFECPKt3i7P7jQRZpr4ZBXjRGcZ9KzcbKzsgYR2W\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xd8703f49411737ecf8d411f8fa66b2bf0ef972ba28b7a4adf1748c63df1bf682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c10a6b8112f6fe3cdccb6240ecd382765216b1a82e9a86a0fec8f5e09eadd1\",\"dweb:/ipfs/QmdRvPCU4RkjMHsTu3Ric1ZEF1AWDNLp78unFC5aWP17xq\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xa24468244abb66e663fb7eee6463cb518eb9a7c14e1071548ff564cca825bbca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://145585a2194aa6e2d30edfe709ef2814e20b1b4540469aa6a8f50c841fcb9070\",\"dweb:/ipfs/QmZrwbvtpbtTxqbW5phUrwb3F1tBiPSQc6jZJAXBfsBsAh\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/foundry-huff/lib/solidity-stringutils/src/strings.sol\":{\"keccak256\":\"0x42cad11a7033f2fe05dd68611d2304407a620ac985b91edf29d5868cfe196223\",\"urls\":[\"bzz-raw://3cbc2333234e1f00eab5e57c4bcaf5115661e5e066a17c70af587a0a96f24669\",\"dweb:/ipfs/QmPHvStqcvZL46LW5N2ExTwAaqNhRCcmAX66aR6oE1WDar\"]},\"lib/foundry-huff/src/HuffConfig.sol\":{\"keccak256\":\"0xae4c3a48a0ab41c223931c06b8a48c7153716a865a670635acb40438f3d57ea0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca6d464f2d9a00b05edf2e681a8569088779858c9d529fe4eba9b388f554d53f\",\"dweb:/ipfs/Qmeq2jxS9oV25pMSzTn4CazRhnecLEbuZb1X3TR6znL7NL\"]},\"lib/foundry-huff/src/HuffDeployer.sol\":{\"keccak256\":\"0x3aea1c3122ba05aed5a090b4d614242661b861db24b9426bfe77712c8a23e5c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28d21f88e5a149dc89d339c11bc00dc418fe13baa741e607fa7b59eacc3200b3\",\"dweb:/ipfs/QmXYwkkXDKuFnStFx6FgFXKiWkhniuYawUTpzbTFA7dmW2\"]},\"test/Multiply.t.sol\":{\"keccak256\":\"0x6bc60fa1571d16d65f747091ca707030d4adfdcefca3f83a28653ecb56b8aac9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3838cd15ac05f856783609f5059064774aba35bc62d96da4f1e4196d39c5619d\",\"dweb:/ipfs/QmWKJzmHEyQRqFMncPepTjCtNjBSNcvZutuM7nLu4SPpRL\"]},\"test/test-utils/NonMatchingSelectorHelper.sol\":{\"keccak256\":\"0xe7b3379b97e1304639e4789368933ebabaad663a149617b93682ff78553db240\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6001e0bce0650e2cc250ae988ed9af98d57bea1c1aa636791e53b158b8041eca\",\"dweb:/ipfs/QmNSovs7NhiDT3dHE6hZ2vVdHjHqVJNKBuga9ckYExAyjH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "multiply",
          "outputs": [
            {
              "internalType": "contract Multiply",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "b",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMultiply"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "callData",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testNonMatchingSelector"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testNonMatchingSelector(bytes32)": {
            "notice": "Test that a non-matching selector reverts"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "foundry-huff/=lib/foundry-huff/src/",
        "solidity-stringutils/=lib/foundry-huff/lib/solidity-stringutils/",
        "lib/foundry-huff:stringutils/=lib/foundry-huff/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Multiply.t.sol": "MultiplyTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x598b85609125830885b8fb54a18f447d04f8dd799aca3de81baef35eb6b783c0",
        "urls": [
          "bzz-raw://c9c128aae4f5668d8c8f71e9e6d9379d8451b8713d139cb66a02d23bc1c75f69",
          "dweb:/ipfs/QmVRihXHWi2yg9CcAhzKf63Y7m6gWz4P1giGMhXUHT3DFu"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0",
        "urls": [
          "bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61",
          "dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x87ba9f3edc254e529db9e3129c954391adcc7fc8574203767979d8d2f1e724b9",
        "urls": [
          "bzz-raw://4d16c08d80d9f2869deb6350642cf5af624d21fce6b3b023abbcdedc62e195fe",
          "dweb:/ipfs/QmURpnnFECPKt3i7P7jQRZpr4ZBXjRGcZ9KzcbKzsgYR2W"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xd8703f49411737ecf8d411f8fa66b2bf0ef972ba28b7a4adf1748c63df1bf682",
        "urls": [
          "bzz-raw://b7c10a6b8112f6fe3cdccb6240ecd382765216b1a82e9a86a0fec8f5e09eadd1",
          "dweb:/ipfs/QmdRvPCU4RkjMHsTu3Ric1ZEF1AWDNLp78unFC5aWP17xq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xa24468244abb66e663fb7eee6463cb518eb9a7c14e1071548ff564cca825bbca",
        "urls": [
          "bzz-raw://145585a2194aa6e2d30edfe709ef2814e20b1b4540469aa6a8f50c841fcb9070",
          "dweb:/ipfs/QmZrwbvtpbtTxqbW5phUrwb3F1tBiPSQc6jZJAXBfsBsAh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/foundry-huff/lib/solidity-stringutils/src/strings.sol": {
        "keccak256": "0x42cad11a7033f2fe05dd68611d2304407a620ac985b91edf29d5868cfe196223",
        "urls": [
          "bzz-raw://3cbc2333234e1f00eab5e57c4bcaf5115661e5e066a17c70af587a0a96f24669",
          "dweb:/ipfs/QmPHvStqcvZL46LW5N2ExTwAaqNhRCcmAX66aR6oE1WDar"
        ],
        "license": null
      },
      "lib/foundry-huff/src/HuffConfig.sol": {
        "keccak256": "0xae4c3a48a0ab41c223931c06b8a48c7153716a865a670635acb40438f3d57ea0",
        "urls": [
          "bzz-raw://ca6d464f2d9a00b05edf2e681a8569088779858c9d529fe4eba9b388f554d53f",
          "dweb:/ipfs/Qmeq2jxS9oV25pMSzTn4CazRhnecLEbuZb1X3TR6znL7NL"
        ],
        "license": "Apache-2.0"
      },
      "lib/foundry-huff/src/HuffDeployer.sol": {
        "keccak256": "0x3aea1c3122ba05aed5a090b4d614242661b861db24b9426bfe77712c8a23e5c8",
        "urls": [
          "bzz-raw://28d21f88e5a149dc89d339c11bc00dc418fe13baa741e607fa7b59eacc3200b3",
          "dweb:/ipfs/QmXYwkkXDKuFnStFx6FgFXKiWkhniuYawUTpzbTFA7dmW2"
        ],
        "license": "Apache-2.0"
      },
      "test/Multiply.t.sol": {
        "keccak256": "0x6bc60fa1571d16d65f747091ca707030d4adfdcefca3f83a28653ecb56b8aac9",
        "urls": [
          "bzz-raw://3838cd15ac05f856783609f5059064774aba35bc62d96da4f1e4196d39c5619d",
          "dweb:/ipfs/QmWKJzmHEyQRqFMncPepTjCtNjBSNcvZutuM7nLu4SPpRL"
        ],
        "license": "BUSL-1.1"
      },
      "test/test-utils/NonMatchingSelectorHelper.sol": {
        "keccak256": "0xe7b3379b97e1304639e4789368933ebabaad663a149617b93682ff78553db240",
        "urls": [
          "bzz-raw://6001e0bce0650e2cc250ae988ed9af98d57bea1c1aa636791e53b158b8041eca",
          "dweb:/ipfs/QmNSovs7NhiDT3dHE6hZ2vVdHjHqVJNKBuga9ckYExAyjH"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Multiply.t.sol",
    "id": 49636,
    "exportedSymbols": {
      "DSTest": [
        2291
      ],
      "HuffConfig": [
        47714
      ],
      "HuffDeployer": [
        48009
      ],
      "Multiply": [
        49522
      ],
      "MultiplyTest": [
        49635
      ],
      "NonMatchingSelectorHelper": [
        50756
      ],
      "StdAssertions": [
        3784
      ],
      "StdChains": [
        4548
      ],
      "StdCheats": [
        7401
      ],
      "StdInvariant": [
        7726
      ],
      "StdStorage": [
        8492
      ],
      "StdStyle": [
        11342
      ],
      "StdUtils": [
        12128
      ],
      "Test": [
        12179
      ],
      "TestBase": [
        2357
      ],
      "Vm": [
        14370
      ],
      "console": [
        22434
      ],
      "console2": [
        30559
      ],
      "safeconsole": [
        44899
      ],
      "stdError": [
        7467
      ],
      "stdJson": [
        8318
      ],
      "stdMath": [
        8460
      ],
      "stdStorage": [
        10131
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:1273:34",
    "nodes": [
      {
        "id": 49505,
        "nodeType": "PragmaDirective",
        "src": "37:24:34",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 49506,
        "nodeType": "ImportDirective",
        "src": "63:28:34",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49636,
        "sourceUnit": 12180,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49508,
        "nodeType": "ImportDirective",
        "src": "92:55:34",
        "nodes": [],
        "absolutePath": "lib/foundry-huff/src/HuffConfig.sol",
        "file": "foundry-huff/HuffConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49636,
        "sourceUnit": 47715,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49507,
              "name": "HuffConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47714,
              "src": "100:10:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49510,
        "nodeType": "ImportDirective",
        "src": "148:59:34",
        "nodes": [],
        "absolutePath": "lib/foundry-huff/src/HuffDeployer.sol",
        "file": "foundry-huff/HuffDeployer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49636,
        "sourceUnit": 48010,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49509,
              "name": "HuffDeployer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48009,
              "src": "156:12:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49512,
        "nodeType": "ImportDirective",
        "src": "208:85:34",
        "nodes": [],
        "absolutePath": "test/test-utils/NonMatchingSelectorHelper.sol",
        "file": "./test-utils/NonMatchingSelectorHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49636,
        "sourceUnit": 50757,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49511,
              "name": "NonMatchingSelectorHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50756,
              "src": "216:25:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49522,
        "nodeType": "ContractDefinition",
        "src": "295:105:34",
        "nodes": [
          {
            "id": 49521,
            "nodeType": "FunctionDefinition",
            "src": "320:78:34",
            "nodes": [],
            "functionSelector": "165c4a16",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "multiply",
            "nameLocation": "329:8:34",
            "parameters": {
              "id": 49517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49514,
                  "mutability": "mutable",
                  "name": "num1",
                  "nameLocation": "346:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 49521,
                  "src": "338:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49516,
                  "mutability": "mutable",
                  "name": "num2",
                  "nameLocation": "360:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 49521,
                  "src": "352:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "337:28:34"
            },
            "returnParameters": {
              "id": 49520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49519,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49521,
                  "src": "389:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:9:34"
            },
            "scope": 49522,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Multiply",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          49522
        ],
        "name": "Multiply",
        "nameLocation": "305:8:34",
        "scope": 49636,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 49635,
        "nodeType": "ContractDefinition",
        "src": "402:907:34",
        "nodes": [
          {
            "id": 49529,
            "nodeType": "VariableDeclaration",
            "src": "465:24:34",
            "nodes": [],
            "constant": false,
            "functionSelector": "f3593cd0",
            "mutability": "mutable",
            "name": "multiply",
            "nameLocation": "481:8:34",
            "scope": 49635,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Multiply_$49522",
              "typeString": "contract Multiply"
            },
            "typeName": {
              "id": 49528,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49527,
                "name": "Multiply",
                "nameLocations": [
                  "465:8:34"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49522,
                "src": "465:8:34"
              },
              "referencedDeclaration": 49522,
              "src": "465:8:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Multiply_$49522",
                "typeString": "contract Multiply"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49544,
            "nodeType": "FunctionDefinition",
            "src": "496:102:34",
            "nodes": [],
            "body": {
              "id": 49543,
              "nodeType": "Block",
              "src": "520:78:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49532,
                      "name": "multiply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49529,
                      "src": "530:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Multiply_$49522",
                        "typeString": "contract Multiply"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "4d756c7469706c79",
                              "id": 49538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "579:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_92c76eb869b053d773097ee910f9b733f1726a988f9fb7b8c240cc58357c3452",
                                "typeString": "literal_string \"Multiply\""
                              },
                              "value": "Multiply"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_92c76eb869b053d773097ee910f9b733f1726a988f9fb7b8c240cc58357c3452",
                                "typeString": "literal_string \"Multiply\""
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 49534,
                                  "name": "HuffDeployer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48009,
                                  "src": "550:12:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_HuffDeployer_$48009_$",
                                    "typeString": "type(library HuffDeployer)"
                                  }
                                },
                                "id": 49535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "563:6:34",
                                "memberName": "config",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47733,
                                "src": "550:19:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_delegatecall_nonpayable$__$returns$_t_contract$_HuffConfig_$47714_$",
                                  "typeString": "function () returns (contract HuffConfig)"
                                }
                              },
                              "id": 49536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "550:21:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HuffConfig_$47714",
                                "typeString": "contract HuffConfig"
                              }
                            },
                            "id": 49537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "572:6:34",
                            "memberName": "deploy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47713,
                            "src": "550:28:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) payable external returns (address)"
                            }
                          },
                          "id": 49539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "550:40:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 49533,
                        "name": "Multiply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49522,
                        "src": "541:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Multiply_$49522_$",
                          "typeString": "type(contract Multiply)"
                        }
                      },
                      "id": 49540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "541:50:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Multiply_$49522",
                        "typeString": "contract Multiply"
                      }
                    },
                    "src": "530:61:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Multiply_$49522",
                      "typeString": "contract Multiply"
                    }
                  },
                  "id": 49542,
                  "nodeType": "ExpressionStatement",
                  "src": "530:61:34"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "505:5:34",
            "parameters": {
              "id": 49530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:2:34"
            },
            "returnParameters": {
              "id": 49531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:34"
            },
            "scope": 49635,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49592,
            "nodeType": "FunctionDefinition",
            "src": "604:338:34",
            "nodes": [],
            "body": {
              "id": 49591,
              "nodeType": "Block",
              "src": "655:287:34",
              "nodes": [],
              "statements": [
                {
                  "id": 49590,
                  "nodeType": "UncheckedBlock",
                  "src": "665:271:34",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 49562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49551,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49548,
                            "src": "693:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 49552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "698:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "693:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 49554,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49546,
                            "src": "703:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 49560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 49557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 49555,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49546,
                                    "src": "709:1:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 49556,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49548,
                                    "src": "713:1:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "709:5:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 49558,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "708:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 49559,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49548,
                              "src": "718:1:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "708:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "703:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "693:26:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 49588,
                        "nodeType": "Block",
                        "src": "835:91:34",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 49576,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2350,
                                  "src": "853:2:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$14370",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 49578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "856:12:34",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14335,
                                "src": "853:15:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                  "typeString": "function () external"
                                }
                              },
                              "id": 49579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "853:17:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 49580,
                            "nodeType": "ExpressionStatement",
                            "src": "853:17:34"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 49584,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49546,
                                  "src": "906:1:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 49585,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49548,
                                  "src": "909:1:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 49581,
                                  "name": "multiply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49529,
                                  "src": "888:8:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Multiply_$49522",
                                    "typeString": "contract Multiply"
                                  }
                                },
                                "id": 49583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "897:8:34",
                                "memberName": "multiply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 49521,
                                "src": "888:17:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure external returns (uint256)"
                                }
                              },
                              "id": 49586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "888:23:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 49587,
                            "nodeType": "ExpressionStatement",
                            "src": "888:23:34"
                          }
                        ]
                      },
                      "id": 49589,
                      "nodeType": "IfStatement",
                      "src": "689:237:34",
                      "trueBody": {
                        "id": 49575,
                        "nodeType": "Block",
                        "src": "721:108:34",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 49566,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49546,
                                      "src": "766:1:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 49567,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49548,
                                      "src": "769:1:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 49564,
                                      "name": "multiply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49529,
                                      "src": "748:8:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Multiply_$49522",
                                        "typeString": "contract Multiply"
                                      }
                                    },
                                    "id": 49565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "757:8:34",
                                    "memberName": "multiply",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49521,
                                    "src": "748:17:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure external returns (uint256)"
                                    }
                                  },
                                  "id": 49568,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "748:23:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 49571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 49569,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49546,
                                    "src": "773:1:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 49570,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49548,
                                    "src": "777:1:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "773:5:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "57726f6e6720726573756c7420666f72204d756c7469706c7928612c206229",
                                  "id": 49572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "780:33:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_644e3484e54aeb0cff5547c0a97cf752faf3139a2965ea34ae1463efb8f2cf2e",
                                    "typeString": "literal_string \"Wrong result for Multiply(a, b)\""
                                  },
                                  "value": "Wrong result for Multiply(a, b)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_644e3484e54aeb0cff5547c0a97cf752faf3139a2965ea34ae1463efb8f2cf2e",
                                    "typeString": "literal_string \"Wrong result for Multiply(a, b)\""
                                  }
                                ],
                                "id": 49563,
                                "name": "assertEq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2485,
                                  2510,
                                  2523,
                                  2539,
                                  2581,
                                  2623,
                                  2665,
                                  2702,
                                  2739,
                                  2776,
                                  320,
                                  345,
                                  375,
                                  400,
                                  459,
                                  484,
                                  514,
                                  539,
                                  2012,
                                  2047
                                ],
                                "referencedDeclaration": 539,
                                "src": "739:8:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256,uint256,string memory)"
                                }
                              },
                              "id": 49573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "739:75:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 49574,
                            "nodeType": "ExpressionStatement",
                            "src": "739:75:34"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            "functionSelector": "042116f1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMultiply",
            "nameLocation": "613:12:34",
            "parameters": {
              "id": 49549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49546,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "634:1:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 49592,
                  "src": "626:9:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49548,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "645:1:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 49592,
                  "src": "637:9:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "625:22:34"
            },
            "returnParameters": {
              "id": 49550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:0:34"
            },
            "scope": 49635,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49634,
            "nodeType": "FunctionDefinition",
            "src": "1006:301:34",
            "nodes": [],
            "body": {
              "id": 49633,
              "nodeType": "Block",
              "src": "1064:243:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49602,
                      "mutability": "mutable",
                      "name": "func_selectors",
                      "nameLocation": "1090:14:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 49633,
                      "src": "1074:30:34",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49600,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1074:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 49601,
                        "nodeType": "ArrayTypeName",
                        "src": "1074:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49608,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 49606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 49605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1107:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49603,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1111:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 49604,
                        "nodeType": "ArrayTypeName",
                        "src": "1111:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 49607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:15:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1074:48:34"
                },
                {
                  "expression": {
                    "id": 49615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49609,
                        "name": "func_selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49602,
                        "src": "1132:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 49611,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1147:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1132:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 49612,
                          "name": "Multiply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49522,
                          "src": "1152:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Multiply_$49522_$",
                            "typeString": "type(contract Multiply)"
                          }
                        },
                        "id": 49613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1161:8:34",
                        "memberName": "multiply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49521,
                        "src": "1152:17:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function Multiply.multiply(uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 49614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1170:8:34",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1152:26:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1132:46:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 49616,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:46:34"
                },
                {
                  "assignments": [
                    49618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49618,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1194:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 49633,
                      "src": "1189:12:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 49617,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1189:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49627,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49620,
                        "name": "func_selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49602,
                        "src": "1230:14:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      {
                        "id": 49621,
                        "name": "callData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49595,
                        "src": "1246:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 49624,
                            "name": "multiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49529,
                            "src": "1264:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Multiply_$49522",
                              "typeString": "contract Multiply"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Multiply_$49522",
                              "typeString": "contract Multiply"
                            }
                          ],
                          "id": 49623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1256:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49622,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1256:7:34",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1256:17:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49619,
                      "name": "nonMatchingSelectorHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50755,
                      "src": "1204:25:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes4_$dyn_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes4[] memory,bytes32,address) returns (bool)"
                      }
                    },
                    "id": 49626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:70:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1189:85:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1291:8:34",
                        "subExpression": {
                          "id": 49629,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49618,
                          "src": "1292:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 49628,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1284:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 49631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1284:16:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49632,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:16:34"
                }
              ]
            },
            "documentation": {
              "id": 49593,
              "nodeType": "StructuredDocumentation",
              "src": "948:53:34",
              "text": "@notice Test that a non-matching selector reverts"
            },
            "functionSelector": "c176f9f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNonMatchingSelector",
            "nameLocation": "1015:23:34",
            "parameters": {
              "id": 49596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49595,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "1047:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 49634,
                  "src": "1039:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49594,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:18:34"
            },
            "returnParameters": {
              "id": 49597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:34"
            },
            "scope": 49635,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49523,
              "name": "Test",
              "nameLocations": [
                "427:4:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12179,
              "src": "427:4:34"
            },
            "id": 49524,
            "nodeType": "InheritanceSpecifier",
            "src": "427:4:34"
          },
          {
            "baseName": {
              "id": 49525,
              "name": "NonMatchingSelectorHelper",
              "nameLocations": [
                "433:25:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50756,
              "src": "433:25:34"
            },
            "id": 49526,
            "nodeType": "InheritanceSpecifier",
            "src": "433:25:34"
          }
        ],
        "canonicalName": "MultiplyTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49635,
          50756,
          12179,
          12128,
          7726,
          7401,
          6608,
          4548,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "MultiplyTest",
        "nameLocation": "411:12:34",
        "scope": 49636,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 34
}