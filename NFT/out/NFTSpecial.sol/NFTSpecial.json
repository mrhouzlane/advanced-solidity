{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_artist",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "ERC2981InvalidDefaultRoyalty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC2981InvalidDefaultRoyaltyReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "ERC2981InvalidTokenRoyalty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC2981InvalidTokenRoyaltyReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721IncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721InsufficientApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721NonexistentToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DISCOUNT_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "_verifyEligible",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "mintDiscount",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stakingContract",
          "type": "address"
        }
      ],
      "name": "transferNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040526000600b553480156200001657600080fd5b506040516200296538038062002965833981016040819052620000399162000227565b826040518060400160405280600a81526020016913919514dc1958da585b60b21b815250604051806040016040528060038152602001624e465360e81b81525081600090816200008a91906200030d565b5060016200009982826200030d565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000d781620000f3565b506080829052620000ea8160fa62000111565b505050620003d9565b600980546001600160a01b03191690556200010e81620001b8565b50565b6127106001600160601b0382168110156200015257604051636f483d0960e01b81526001600160601b038316600482015260248101829052604401620000c3565b6001600160a01b0383166200017e57604051635b6cc80560e11b815260006004820152602401620000c3565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600655565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200022257600080fd5b919050565b6000806000606084860312156200023d57600080fd5b62000248846200020a565b9250602084015191506200025f604085016200020a565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029357607f821691505b602082108103620002b457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030857600081815260208120601f850160051c81016020861015620002e35750805b601f850160051c820191505b818110156200030457828155600101620002ef565b5050505b505050565b81516001600160401b0381111562000329576200032962000268565b62000341816200033a84546200027e565b84620002ba565b602080601f831160018114620003795760008415620003605750858301515b600019600386901b1c1916600185901b17855562000304565b600085815260208120601f198616915b82811015620003aa5788860151825594840194600190910190840162000389565b5085821015620003c95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051612569620003fc600039600081816103830152610be801526125696000f3fe6080604052600436106101cd5760003560e01c80636352211e116100f757806395d89b4111610095578063e30c397811610064578063e30c39781461056c578063e985e9c514610597578063edcb1216146105ed578063f2fde38b1461060057600080fd5b806395d89b41146104f7578063a22cb4651461050c578063b88d4fde1461052c578063c87b56dd1461054c57600080fd5b80637824407f116100d15780637824407f1461048557806379ba50971461049b5780638d859f3e146104b05780638da5cb5b146104cc57600080fd5b80636352211e1461043057806370a0823114610450578063715018a61461047057600080fd5b806323b872dd1161016f57806336e986ef1161013e57806336e986ef146103bb5780633ccfd60b146103db57806342842e0e146103f05780634cda09901461041057600080fd5b806323b872dd146103055780632a55205a146103255780632eb4a7ab1461037157806332cb6b0c146103a557600080fd5b806306fdde03116101ab57806306fdde0314610299578063081812fc146102bb578063095ea7b3146102db5780631249c58b146102fd57600080fd5b806301ffc9a7146101d2578063025e7c2714610207578063057707a01461026f575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611f5e565b610620565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061024a610222366004611f7b565b600c6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101fe565b34801561027b57600080fd5b5061028b670b1a2bc2ec50000081565b6040519081526020016101fe565b3480156102a557600080fd5b506102ae610640565b6040516101fe9190612002565b3480156102c757600080fd5b5061024a6102d6366004611f7b565b6106d2565b3480156102e757600080fd5b506102fb6102f636600461203e565b610708565b005b6102fb610717565b34801561031157600080fd5b506102fb610320366004612068565b610854565b34801561033157600080fd5b506103456103403660046120a4565b610945565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016101fe565b34801561037d57600080fd5b5061028b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103b157600080fd5b5061028b6103e881565b3480156103c757600080fd5b506102fb6103d63660046120c6565b610a3c565b3480156103e757600080fd5b506102fb610b10565b3480156103fc57600080fd5b506102fb61040b366004612068565b610b5e565b34801561041c57600080fd5b506102fb61042b3660046120e1565b610b7e565b34801561043c57600080fd5b5061024a61044b366004611f7b565b610c80565b34801561045c57600080fd5b5061028b61046b3660046120c6565b610c8b565b34801561047c57600080fd5b506102fb610d06565b34801561049157600080fd5b5061028b600b5481565b3480156104a757600080fd5b506102fb610d1a565b3480156104bc57600080fd5b5061028b670de0b6b3a764000081565b3480156104d857600080fd5b5060085473ffffffffffffffffffffffffffffffffffffffff1661024a565b34801561050357600080fd5b506102ae610d8e565b34801561051857600080fd5b506102fb61052736600461216d565b610d9d565b34801561053857600080fd5b506102fb6105473660046121d8565b610da8565b34801561055857600080fd5b506102ae610567366004611f7b565b610dbf565b34801561057857600080fd5b5060095473ffffffffffffffffffffffffffffffffffffffff1661024a565b3480156105a357600080fd5b506101f26105b23660046122d2565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102fb6105fb3660046120e1565b610e34565b34801561060c57600080fd5b506102fb61061b3660046120c6565b610fc9565b600061062b82611079565b8061063a575061063a8261115c565b92915050565b60606000805461064f90612305565b80601f016020809104026020016040519081016040528092919081815260200182805461067b90612305565b80156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b5050505050905090565b60006106dd826111b2565b5060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1661063a565b610713828233611211565b5050565b6103e8600b5410610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d6178696d756d20737570706c7920726561636865640000000000000000000060448201526064015b60405180910390fd5b670de0b6b3a764000034146107fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c6964207072696365000000000000000000000000000000000000006044820152606401610780565b61080633600b5461121e565b600b80546000908152600c6020526040812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790558154919061084d83612387565b9190505550565b73ffffffffffffffffffffffffffffffffffffffff82166108a4576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b60006108b18383336112cf565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461093f576040517f64283d7b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80861660048301526024820184905282166044820152606401610780565b50505050565b600082815260076020908152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff8116808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff16928201929092528291610a0057506040805180820190915260065473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1660208201525b602081015160009061271090610a24906bffffffffffffffffffffffff16876123bf565b610a2e91906123d6565b915196919550909350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600c60006001600b54610a669190612411565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1614610af4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4f6e6c79206f776e65722063616e207472616e736665720000000000000000006044820152606401610780565b610b0d33826001600b54610b089190612411565b61144c565b50565b610b18611588565b60085460405173ffffffffffffffffffffffffffffffffffffffff909116904780156108fc02916000818181858888f19350505050158015610b0d573d6000803e3d6000fd5b610b7983838360405180602001604052806000815250610da8565b505050565b600084610b8a836115db565b604051602001610b9b929190612424565b604051602081830303815290604052805190602001209050610c138484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506116999050565b610c79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e76616c6964206d65726b6c652070726f6f660000000000000000000000006044820152606401610780565b5050505050565b600061063a826111b2565b600073ffffffffffffffffffffffffffffffffffffffff8216610cdd576040517f89c62b6400000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b610d0e611588565b610d1860006116af565b565b600954339073ffffffffffffffffffffffffffffffffffffffff168114610d85576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610780565b610b0d816116af565b60606001805461064f90612305565b6107133383836116e0565b610db3848484610854565b61093f848484846117dd565b6060610dca826111b2565b506000610de260408051602081019091526000815290565b90506000815111610e025760405180602001604052806000815250610e2d565b80610e0c846115db565b604051602001610e1d92919061246f565b6040516020818303038152906040525b9392505050565b6103e8600b5410610ea1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d6178696d756d20737570706c792072656163686564000000000000000000006044820152606401610780565b600881901c6000908152600a6020526040902054600160ff83161b1615610f24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f416c7265616479206d696e7465640000000000000000000000000000000000006044820152606401610780565b670b1a2bc2ec5000003414610f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c6964207072696365000000000000000000000000000000000000006044820152606401610780565b610fa2600a8260016119cd565b610fae33600b5461121e565b600b8054906000610fbe83612387565b919050555050505050565b610fd1611588565b6009805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915561103460085473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061110c57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061063a57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083161461063a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f2a55205a00000000000000000000000000000000000000000000000000000000148061063a575061063a82611079565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff168061063a576040517f7e27328900000000000000000000000000000000000000000000000000000000815260048101849052602401610780565b610b798383836001611a1c565b73ffffffffffffffffffffffffffffffffffffffff821661126e576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b600061127c838360006112cf565b905073ffffffffffffffffffffffffffffffffffffffff811615610b79576040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b60008281526002602052604081205473ffffffffffffffffffffffffffffffffffffffff9081169083161561130957611309818486611be7565b73ffffffffffffffffffffffffffffffffffffffff81161561137f57611333600085600080611a1c565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b73ffffffffffffffffffffffffffffffffffffffff8516156113c85773ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260409020805460010190555b60008481526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff89811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b73ffffffffffffffffffffffffffffffffffffffff821661149c576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b60006114aa838360006112cf565b905073ffffffffffffffffffffffffffffffffffffffff81166114fc576040517f7e27328900000000000000000000000000000000000000000000000000000000815260048101839052602401610780565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461093f576040517f64283d7b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80861660048301526024820184905282166044820152606401610780565b60085473ffffffffffffffffffffffffffffffffffffffff163314610d18576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610780565b606060006115e883611c97565b600101905060008167ffffffffffffffff811115611608576116086121a9565b6040519080825280601f01601f191660200182016040528015611632576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461163c57509392505050565b6000826116a68584611d79565b14949350505050565b600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055610b0d81611dc6565b73ffffffffffffffffffffffffffffffffffffffff8216611745576040517f5b08ba1800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610780565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83163b1561093f576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063150b7a029061185290339088908790879060040161249e565b6020604051808303816000875af19250505080156118ab575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526118a8918101906124e7565b60015b61193a573d8080156118d9576040519150601f19603f3d011682016040523d82523d6000602084013e6118de565b606091505b508051600003611932576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610780565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f150b7a020000000000000000000000000000000000000000000000000000000014610c79576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610780565b80156119f757600882901c60009081526020849052604090208054600160ff85161b179055505050565b600882901c60009081526020849052604090208054600160ff85161b19169055505050565b8080611a3d575073ffffffffffffffffffffffffffffffffffffffff821615155b15611b92576000611a4d846111b2565b905073ffffffffffffffffffffffffffffffffffffffff831615801590611aa057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611adf575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209387168352929052205460ff16155b15611b2e576040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610780565b8115611b9057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611bf2838383611e3d565b610b795773ffffffffffffffffffffffffffffffffffffffff8316611c46576040517f7e27328900000000000000000000000000000000000000000000000000000000815260048101829052602401610780565b6040517f177e802f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260248101829052604401610780565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611ce0577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611d0c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611d2a57662386f26fc10000830492506010015b6305f5e1008310611d42576305f5e100830492506008015b6127108310611d5657612710830492506004015b60648310611d68576064830492506002015b600a831061063a5760010192915050565b600081815b8451811015611dbe57611daa82868381518110611d9d57611d9d612504565b6020026020010151611f04565b915080611db681612387565b915050611d7e565b509392505050565b6008805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600073ffffffffffffffffffffffffffffffffffffffff831615801590611efc57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ecb575073ffffffffffffffffffffffffffffffffffffffff80851660009081526005602090815260408083209387168352929052205460ff165b80611efc575060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116145b949350505050565b6000818310611f20576000828152602084905260409020610e2d565b5060009182526020526040902090565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610b0d57600080fd5b600060208284031215611f7057600080fd5b8135610e2d81611f30565b600060208284031215611f8d57600080fd5b5035919050565b60005b83811015611faf578181015183820152602001611f97565b50506000910152565b60008151808452611fd0816020860160208601611f94565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610e2d6020830184611fb8565b803573ffffffffffffffffffffffffffffffffffffffff8116811461203957600080fd5b919050565b6000806040838503121561205157600080fd5b61205a83612015565b946020939093013593505050565b60008060006060848603121561207d57600080fd5b61208684612015565b925061209460208501612015565b9150604084013590509250925092565b600080604083850312156120b757600080fd5b50508035926020909101359150565b6000602082840312156120d857600080fd5b610e2d82612015565b600080600080606085870312156120f757600080fd5b61210085612015565b9350602085013567ffffffffffffffff8082111561211d57600080fd5b818701915087601f83011261213157600080fd5b81358181111561214057600080fd5b8860208260051b850101111561215557600080fd5b95986020929092019750949560400135945092505050565b6000806040838503121561218057600080fd5b61218983612015565b91506020830135801515811461219e57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156121ee57600080fd5b6121f785612015565b935061220560208601612015565b925060408501359150606085013567ffffffffffffffff8082111561222957600080fd5b818701915087601f83011261223d57600080fd5b81358181111561224f5761224f6121a9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715612295576122956121a9565b816040528281528a60208487010111156122ae57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156122e557600080fd5b6122ee83612015565b91506122fc60208401612015565b90509250929050565b600181811c9082168061231957607f821691505b602082108103612352577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123b8576123b8612358565b5060010190565b808202811582820484141761063a5761063a612358565b60008261240c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561063a5761063a612358565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b16815260008251612461816014850160208701611f94565b919091016014019392505050565b60008351612481818460208801611f94565b835190830190612495818360208801611f94565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526124dd6080830184611fb8565b9695505050505050565b6000602082840312156124f957600080fd5b8151610e2d81611f30565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212205df7800b5885a38e3f191154f3ee8eaed2b9514e90b07a07e4a43b447919fa5a64736f6c63430008150033",
    "sourceMap": "507:2248:42:-:0;;;748:1;719:30;;1000:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1101:5;1381:113:27;;;;;;;;;;;;;-1:-1:-1;;;1381:113:27;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:27;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:27;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:18;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:18;;1350:1;1322:31;;;3422:51:45;3395:18;;1322:31:18;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1118:24:42::2;::::0;;;1152:32:::2;1171:7:::0;1180:3:::2;1152:18;:32::i;:::-;1000:191:::0;;;507:2248;;1528:153:19;1617:13;1610:20;;-1:-1:-1;;;;;;1610:20:19;;;1640:34;1665:8;1640:24;:34::i;:::-;1528:153;:::o;3429:507:31:-;3156:5;-1:-1:-1;;;;;3576:26:31;;;-1:-1:-1;3572:173:31;;;3679:55;;-1:-1:-1;;;3679:55:31;;-1:-1:-1;;;;;3675:31:45;;3679:55:31;;;3657:50:45;3723:18;;;3716:34;;;3630:18;;3679:55:31;3484:272:45;3572:173:31;-1:-1:-1;;;;;3758:22:31;;3754:108;;3803:48;;-1:-1:-1;;;3803:48:31;;3848:1;3803:48;;;3422:51:45;3395:18;;3803:48:31;3276:203:45;3754:108:31;-1:-1:-1;3894:35:31;;;;;;;;;-1:-1:-1;;;;;3894:35:31;;;;;;-1:-1:-1;;;;;3894:35:31;;;;;;;;;;-1:-1:-1;;;3872:57:31;;;;:19;:57;3429:507::o;2912:187:18:-;3004:6;;;-1:-1:-1;;;;;3020:17:18;;;-1:-1:-1;;;;;;3020:17:18;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:45:-;93:13;;-1:-1:-1;;;;;135:31:45;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;555:127::-;616:10;611:3;607:20;604:1;597:31;647:4;644:1;637:15;671:4;668:1;661:15;687:380;766:1;762:12;;;;809;;;830:61;;884:4;876:6;872:17;862:27;;830:61;937:2;929:6;926:14;906:18;903:38;900:161;;983:10;978:3;974:20;971:1;964:31;1018:4;1015:1;1008:15;1046:4;1043:1;1036:15;900:161;;687:380;;;:::o;1198:545::-;1300:2;1295:3;1292:11;1289:448;;;1336:1;1361:5;1357:2;1350:17;1406:4;1402:2;1392:19;1476:2;1464:10;1460:19;1457:1;1453:27;1447:4;1443:38;1512:4;1500:10;1497:20;1494:47;;;-1:-1:-1;1535:4:45;1494:47;1590:2;1585:3;1581:12;1578:1;1574:20;1568:4;1564:31;1554:41;;1645:82;1663:2;1656:5;1653:13;1645:82;;;1708:17;;;1689:1;1678:13;1645:82;;;1649:3;;;1289:448;1198:545;;;:::o;1919:1352::-;2039:10;;-1:-1:-1;;;;;2061:30:45;;2058:56;;;2094:18;;:::i;:::-;2123:97;2213:6;2173:38;2205:4;2199:11;2173:38;:::i;:::-;2167:4;2123:97;:::i;:::-;2275:4;;2339:2;2328:14;;2356:1;2351:663;;;;3058:1;3075:6;3072:89;;;-1:-1:-1;3127:19:45;;;3121:26;3072:89;-1:-1:-1;;1876:1:45;1872:11;;;1868:24;1864:29;1854:40;1900:1;1896:11;;;1851:57;3174:81;;2321:944;;2351:663;1145:1;1138:14;;;1182:4;1169:18;;-1:-1:-1;;2387:20:45;;;2505:236;2519:7;2516:1;2513:14;2505:236;;;2608:19;;;2602:26;2587:42;;2700:27;;;;2668:1;2656:14;;;;2535:19;;2505:236;;;2509:3;2769:6;2760:7;2757:19;2754:201;;;2830:19;;;2824:26;-1:-1:-1;;2913:1:45;2909:14;;;2925:3;2905:24;2901:37;2897:42;2882:58;2867:74;;2754:201;-1:-1:-1;;;;;3001:1:45;2985:14;;;2981:22;2968:36;;-1:-1:-1;1919:1352:45:o;3484:272::-;507:2248:42;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101cd5760003560e01c80636352211e116100f757806395d89b4111610095578063e30c397811610064578063e30c39781461056c578063e985e9c514610597578063edcb1216146105ed578063f2fde38b1461060057600080fd5b806395d89b41146104f7578063a22cb4651461050c578063b88d4fde1461052c578063c87b56dd1461054c57600080fd5b80637824407f116100d15780637824407f1461048557806379ba50971461049b5780638d859f3e146104b05780638da5cb5b146104cc57600080fd5b80636352211e1461043057806370a0823114610450578063715018a61461047057600080fd5b806323b872dd1161016f57806336e986ef1161013e57806336e986ef146103bb5780633ccfd60b146103db57806342842e0e146103f05780634cda09901461041057600080fd5b806323b872dd146103055780632a55205a146103255780632eb4a7ab1461037157806332cb6b0c146103a557600080fd5b806306fdde03116101ab57806306fdde0314610299578063081812fc146102bb578063095ea7b3146102db5780631249c58b146102fd57600080fd5b806301ffc9a7146101d2578063025e7c2714610207578063057707a01461026f575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611f5e565b610620565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061024a610222366004611f7b565b600c6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101fe565b34801561027b57600080fd5b5061028b670b1a2bc2ec50000081565b6040519081526020016101fe565b3480156102a557600080fd5b506102ae610640565b6040516101fe9190612002565b3480156102c757600080fd5b5061024a6102d6366004611f7b565b6106d2565b3480156102e757600080fd5b506102fb6102f636600461203e565b610708565b005b6102fb610717565b34801561031157600080fd5b506102fb610320366004612068565b610854565b34801561033157600080fd5b506103456103403660046120a4565b610945565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016101fe565b34801561037d57600080fd5b5061028b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103b157600080fd5b5061028b6103e881565b3480156103c757600080fd5b506102fb6103d63660046120c6565b610a3c565b3480156103e757600080fd5b506102fb610b10565b3480156103fc57600080fd5b506102fb61040b366004612068565b610b5e565b34801561041c57600080fd5b506102fb61042b3660046120e1565b610b7e565b34801561043c57600080fd5b5061024a61044b366004611f7b565b610c80565b34801561045c57600080fd5b5061028b61046b3660046120c6565b610c8b565b34801561047c57600080fd5b506102fb610d06565b34801561049157600080fd5b5061028b600b5481565b3480156104a757600080fd5b506102fb610d1a565b3480156104bc57600080fd5b5061028b670de0b6b3a764000081565b3480156104d857600080fd5b5060085473ffffffffffffffffffffffffffffffffffffffff1661024a565b34801561050357600080fd5b506102ae610d8e565b34801561051857600080fd5b506102fb61052736600461216d565b610d9d565b34801561053857600080fd5b506102fb6105473660046121d8565b610da8565b34801561055857600080fd5b506102ae610567366004611f7b565b610dbf565b34801561057857600080fd5b5060095473ffffffffffffffffffffffffffffffffffffffff1661024a565b3480156105a357600080fd5b506101f26105b23660046122d2565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102fb6105fb3660046120e1565b610e34565b34801561060c57600080fd5b506102fb61061b3660046120c6565b610fc9565b600061062b82611079565b8061063a575061063a8261115c565b92915050565b60606000805461064f90612305565b80601f016020809104026020016040519081016040528092919081815260200182805461067b90612305565b80156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b5050505050905090565b60006106dd826111b2565b5060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1661063a565b610713828233611211565b5050565b6103e8600b5410610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d6178696d756d20737570706c7920726561636865640000000000000000000060448201526064015b60405180910390fd5b670de0b6b3a764000034146107fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c6964207072696365000000000000000000000000000000000000006044820152606401610780565b61080633600b5461121e565b600b80546000908152600c6020526040812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790558154919061084d83612387565b9190505550565b73ffffffffffffffffffffffffffffffffffffffff82166108a4576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b60006108b18383336112cf565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461093f576040517f64283d7b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80861660048301526024820184905282166044820152606401610780565b50505050565b600082815260076020908152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff8116808352740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff16928201929092528291610a0057506040805180820190915260065473ffffffffffffffffffffffffffffffffffffffff811682527401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1660208201525b602081015160009061271090610a24906bffffffffffffffffffffffff16876123bf565b610a2e91906123d6565b915196919550909350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600c60006001600b54610a669190612411565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1614610af4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4f6e6c79206f776e65722063616e207472616e736665720000000000000000006044820152606401610780565b610b0d33826001600b54610b089190612411565b61144c565b50565b610b18611588565b60085460405173ffffffffffffffffffffffffffffffffffffffff909116904780156108fc02916000818181858888f19350505050158015610b0d573d6000803e3d6000fd5b610b7983838360405180602001604052806000815250610da8565b505050565b600084610b8a836115db565b604051602001610b9b929190612424565b604051602081830303815290604052805190602001209050610c138484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506116999050565b610c79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e76616c6964206d65726b6c652070726f6f660000000000000000000000006044820152606401610780565b5050505050565b600061063a826111b2565b600073ffffffffffffffffffffffffffffffffffffffff8216610cdd576040517f89c62b6400000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b610d0e611588565b610d1860006116af565b565b600954339073ffffffffffffffffffffffffffffffffffffffff168114610d85576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610780565b610b0d816116af565b60606001805461064f90612305565b6107133383836116e0565b610db3848484610854565b61093f848484846117dd565b6060610dca826111b2565b506000610de260408051602081019091526000815290565b90506000815111610e025760405180602001604052806000815250610e2d565b80610e0c846115db565b604051602001610e1d92919061246f565b6040516020818303038152906040525b9392505050565b6103e8600b5410610ea1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d6178696d756d20737570706c792072656163686564000000000000000000006044820152606401610780565b600881901c6000908152600a6020526040902054600160ff83161b1615610f24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f416c7265616479206d696e7465640000000000000000000000000000000000006044820152606401610780565b670b1a2bc2ec5000003414610f95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c6964207072696365000000000000000000000000000000000000006044820152606401610780565b610fa2600a8260016119cd565b610fae33600b5461121e565b600b8054906000610fbe83612387565b919050555050505050565b610fd1611588565b6009805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116811790915561103460085473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061110c57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061063a57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083161461063a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f2a55205a00000000000000000000000000000000000000000000000000000000148061063a575061063a82611079565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff168061063a576040517f7e27328900000000000000000000000000000000000000000000000000000000815260048101849052602401610780565b610b798383836001611a1c565b73ffffffffffffffffffffffffffffffffffffffff821661126e576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b600061127c838360006112cf565b905073ffffffffffffffffffffffffffffffffffffffff811615610b79576040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b60008281526002602052604081205473ffffffffffffffffffffffffffffffffffffffff9081169083161561130957611309818486611be7565b73ffffffffffffffffffffffffffffffffffffffff81161561137f57611333600085600080611a1c565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b73ffffffffffffffffffffffffffffffffffffffff8516156113c85773ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260409020805460010190555b60008481526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff89811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b73ffffffffffffffffffffffffffffffffffffffff821661149c576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260006004820152602401610780565b60006114aa838360006112cf565b905073ffffffffffffffffffffffffffffffffffffffff81166114fc576040517f7e27328900000000000000000000000000000000000000000000000000000000815260048101839052602401610780565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461093f576040517f64283d7b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80861660048301526024820184905282166044820152606401610780565b60085473ffffffffffffffffffffffffffffffffffffffff163314610d18576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610780565b606060006115e883611c97565b600101905060008167ffffffffffffffff811115611608576116086121a9565b6040519080825280601f01601f191660200182016040528015611632576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461163c57509392505050565b6000826116a68584611d79565b14949350505050565b600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055610b0d81611dc6565b73ffffffffffffffffffffffffffffffffffffffff8216611745576040517f5b08ba1800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610780565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83163b1561093f576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063150b7a029061185290339088908790879060040161249e565b6020604051808303816000875af19250505080156118ab575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526118a8918101906124e7565b60015b61193a573d8080156118d9576040519150601f19603f3d011682016040523d82523d6000602084013e6118de565b606091505b508051600003611932576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610780565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f150b7a020000000000000000000000000000000000000000000000000000000014610c79576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610780565b80156119f757600882901c60009081526020849052604090208054600160ff85161b179055505050565b600882901c60009081526020849052604090208054600160ff85161b19169055505050565b8080611a3d575073ffffffffffffffffffffffffffffffffffffffff821615155b15611b92576000611a4d846111b2565b905073ffffffffffffffffffffffffffffffffffffffff831615801590611aa057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611adf575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209387168352929052205460ff16155b15611b2e576040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610780565b8115611b9057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611bf2838383611e3d565b610b795773ffffffffffffffffffffffffffffffffffffffff8316611c46576040517f7e27328900000000000000000000000000000000000000000000000000000000815260048101829052602401610780565b6040517f177e802f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260248101829052604401610780565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611ce0577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611d0c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611d2a57662386f26fc10000830492506010015b6305f5e1008310611d42576305f5e100830492506008015b6127108310611d5657612710830492506004015b60648310611d68576064830492506002015b600a831061063a5760010192915050565b600081815b8451811015611dbe57611daa82868381518110611d9d57611d9d612504565b6020026020010151611f04565b915080611db681612387565b915050611d7e565b509392505050565b6008805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600073ffffffffffffffffffffffffffffffffffffffff831615801590611efc57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ecb575073ffffffffffffffffffffffffffffffffffffffff80851660009081526005602090815260408083209387168352929052205460ff165b80611efc575060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116145b949350505050565b6000818310611f20576000828152602084905260409020610e2d565b5060009182526020526040902090565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610b0d57600080fd5b600060208284031215611f7057600080fd5b8135610e2d81611f30565b600060208284031215611f8d57600080fd5b5035919050565b60005b83811015611faf578181015183820152602001611f97565b50506000910152565b60008151808452611fd0816020860160208601611f94565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610e2d6020830184611fb8565b803573ffffffffffffffffffffffffffffffffffffffff8116811461203957600080fd5b919050565b6000806040838503121561205157600080fd5b61205a83612015565b946020939093013593505050565b60008060006060848603121561207d57600080fd5b61208684612015565b925061209460208501612015565b9150604084013590509250925092565b600080604083850312156120b757600080fd5b50508035926020909101359150565b6000602082840312156120d857600080fd5b610e2d82612015565b600080600080606085870312156120f757600080fd5b61210085612015565b9350602085013567ffffffffffffffff8082111561211d57600080fd5b818701915087601f83011261213157600080fd5b81358181111561214057600080fd5b8860208260051b850101111561215557600080fd5b95986020929092019750949560400135945092505050565b6000806040838503121561218057600080fd5b61218983612015565b91506020830135801515811461219e57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156121ee57600080fd5b6121f785612015565b935061220560208601612015565b925060408501359150606085013567ffffffffffffffff8082111561222957600080fd5b818701915087601f83011261223d57600080fd5b81358181111561224f5761224f6121a9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715612295576122956121a9565b816040528281528a60208487010111156122ae57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156122e557600080fd5b6122ee83612015565b91506122fc60208401612015565b90509250929050565b600181811c9082168061231957607f821691505b602082108103612352577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123b8576123b8612358565b5060010190565b808202811582820484141761063a5761063a612358565b60008261240c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b8181038181111561063a5761063a612358565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b16815260008251612461816014850160208701611f94565b919091016014019392505050565b60008351612481818460208801611f94565b835190830190612495818360208801611f94565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526124dd6080830184611fb8565b9695505050505050565b6000602082840312156124f957600080fd5b8151610e2d81611f30565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212205df7800b5885a38e3f191154f3ee8eaed2b9514e90b07a07e4a43b447919fa5a64736f6c63430008150033",
    "sourceMap": "507:2248:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2542:211;;;;;;;;;;-1:-1:-1;2542:211:42;;;;;:::i;:::-;;:::i;:::-;;;611:14:45;;604:22;586:41;;574:2;559:18;2542:211:42;;;;;;;;952:41;;;;;;;;;;-1:-1:-1;952:41:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;999:42:45;987:55;;;969:74;;957:2;942:18;952:41:42;823:226:45;848:50:42;;;;;;;;;;;;889:9;848:50;;;;;1200:25:45;;;1188:2;1173:18;848:50:42;1054:177:45;2365:89:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;;;;;-1:-1:-1;3497:154:27;;;;;:::i;:::-;;:::i;3323:113::-;;;;;;;;;;-1:-1:-1;3323:113:27;;;;;:::i;:::-;;:::i;:::-;;1942:268:42;;;:::i;4143:578:27:-;;;;;;;;;;-1:-1:-1;4143:578:27;;;;;:::i;:::-;;:::i;2379:419:31:-;;;;;;;;;;-1:-1:-1;2379:419:31;;;;;:::i;:::-;;:::i;:::-;;;;3301:42:45;3289:55;;;3271:74;;3376:2;3361:18;;3354:34;;;;3244:18;2379:419:31;3097:297:45;636:35:42;;;;;;;;;;;;;;;755:42;;;;;;;;;;;;792:5;755:42;;2326:210;;;;;;;;;;-1:-1:-1;2326:210:42;;;;;:::i;:::-;;:::i;2216:104::-;;;;;;;;;;;;;:::i;4787:132:27:-;;;;;;;;;;-1:-1:-1;4787:132:27;;;;;:::i;:::-;;:::i;1197:272:42:-;;;;;;;;;;-1:-1:-1;1197:272:42;;;;;:::i;:::-;;:::i;2185:118:27:-;;;;;;;;;;-1:-1:-1;2185:118:27;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;;;;;-1:-1:-1;1920:208:27;;;;;:::i;:::-;;:::i;2293:101:18:-;;;;;;;;;;;;;:::i;719:30:42:-;;;;;;;;;;;;;;;;1761:229:19;;;;;;;;;;;;;:::i;803:39:42:-;;;;;;;;;;;;835:7;803:39;;1638:85:18;;;;;;;;;;-1:-1:-1;1710:6:18;;;;1638:85;;2518:93:27;;;;;;;;;;;;;:::i;3718:144::-;;;;;;;;;;-1:-1:-1;3718:144:27;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;;;;;-1:-1:-1;4985:208:27;;;;;:::i;:::-;;:::i;2677:255::-;;;;;;;;;;-1:-1:-1;2677:255:27;;;;;:::i;:::-;;:::i;874:99:19:-;;;;;;;;;;-1:-1:-1;953:13:19;;;;874:99;;3928:153:27;;;;;;;;;;-1:-1:-1;3928:153:27;;;;;:::i;:::-;4039:25;;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153;1475:461:42;;;;;;:::i;:::-;;:::i;1166:178:19:-;;;;;;;;;;-1:-1:-1;1166:178:19;;;;;:::i;:::-;;:::i;2542:211:42:-;2644:4;2667:37;2692:11;2667:24;:37::i;:::-;:79;;;;2708:38;2734:11;2708:25;:38::i;:::-;2660:86;2542:211;-1:-1:-1;;2542:211:42:o;2365:89:27:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:27;6034:24;;;:15;:24;;;;;;;;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:33;3394:8:27;:35::i;:::-;3323:113;;:::o;1942:268:42:-;792:5;1993:11;;:24;1985:59;;;;;;;7186:2:45;1985:59:42;;;7168:21:45;7225:2;7205:18;;;7198:30;7264:24;7244:18;;;7237:52;7306:18;;1985:59:42;;;;;;;;;835:7;2062:9;:18;2054:44;;;;;;;7537:2:45;2054:44:42;;;7519:21:45;7576:2;7556:18;;;7549:30;7615:15;7595:18;;;7588:43;7648:18;;2054:44:42;7335:337:45;2054:44:42;2108:30;2114:10;2126:11;;2108:5;:30::i;:::-;2155:11;;;2148:19;;;;:6;:19;;;;;:32;;;;2170:10;2148:32;;;2190:13;;;2155:11;2190:13;;;:::i;:::-;;;;;;1942:268::o;4143:578:27:-;4237:16;;;4233:87;;4276:33;;;;;4306:1;4276:33;;;969:74:45;942:18;;4276:33:27;823:226:45;4233:87:27;4538:21;4562:34;4570:2;4574:7;735:10:33;4562:7:27;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4654:50;;;;;8278:42:45;8347:15;;;4654:50:27;;;8329:34:45;8379:18;;;8372:34;;;8442:15;;8422:18;;;8415:43;8241:18;;4654:50:27;8066:398:45;4606:109:27;4223:498;4143:578;;;:::o;2379:419:31:-;2465:7;2522:26;;;:17;:26;;;;;;;;2493:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:7;;2559:90;;-1:-1:-1;2609:29:31;;;;;;;;;2619:19;2609:29;;;;;;;;;;;;;;;2559:90;2696:23;;;;2659:21;;3156:5;;2684:35;;2683:57;2684:35;:9;:35;:::i;:::-;2683:57;;;;:::i;:::-;2759:16;;;;;-1:-1:-1;2379:419:31;;-1:-1:-1;;;;2379:419:31:o;2326:210:42:-;2426:10;2399:37;;:6;:23;2420:1;2406:11;;:15;;;;:::i;:::-;2399:23;;;;;;;;;;;-1:-1:-1;2399:23:42;;;;:37;2391:73;;;;;;;9445:2:45;2391:73:42;;;9427:21:45;9484:2;9464:18;;;9457:30;9523:25;9503:18;;;9496:53;9566:18;;2391:73:42;9243:347:45;2391:73:42;2474:55;2484:10;2496:15;2527:1;2513:11;;:15;;;;:::i;:::-;2474:9;:55::i;:::-;2326:210;:::o;2216:104::-;1531:13:18;:11;:13::i;:::-;1710:6;;2265:48:42::1;::::0;1710:6:18;;;;;2291:21:42::1;2265:48:::0;::::1;;;::::0;::::1;::::0;;;2291:21;1710:6:18;2265:48:42;::::1;;;;;;;;;;;;;::::0;::::1;;;;4787:132:27::0;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1197:272:42:-;1302:12;1344:6;1352:16;:5;:14;:16::i;:::-;1327:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1317:53;;;;;;1302:68;;1388:49;1407:11;;1388:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1420:10:42;;-1:-1:-1;1432:4:42;;-1:-1:-1;1388:18:42;;-1:-1:-1;1388:49:42:i;:::-;1380:82;;;;;;;10247:2:45;1380:82:42;;;10229:21:45;10286:2;10266:18;;;10259:30;10325:22;10305:18;;;10298:50;10365:18;;1380:82:42;10045:344:45;1380:82:42;1292:177;1197:272;;;;:::o;2185:118:27:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;2006:19;;;2002:87;;2048:30;;;;;2075:1;2048:30;;;969:74:45;942:18;;2048:30:27;823:226:45;2002:87:27;-1:-1:-1;2105:16:27;;;;;;:9;:16;;;;;;;1920:208::o;2293:101:18:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1761:229:19:-;953:13;;735:10:33;;1856:24:19;953:13;1856:24;;1852:96;;1903:34;;;;;999:42:45;987:55;;1903:34:19;;;969:74:45;942:18;;1903:34:19;823:226:45;1852:96:19;1957:26;1976:6;1957:18;:26::i;2518:93:27:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:33;3836:8:27;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:27;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:27:o;1475:461:42:-;792:5;1589:11;;:24;1581:59;;;;;;;7186:2:45;1581:59:42;;;7168:21:45;7225:2;7205:18;;;7198:30;7264:24;7244:18;;;7237:52;7306:18;;1581:59:42;6984:346:45;1581:59:42;1144:1:40;1135:10;;;1102:4;1206:20;;;1659:13:42;1206:20:40;;;;;;1170:1;1184:4;1176:12;;1170:19;1206:27;:32;1650:52:42;;;;;;;11097:2:45;1650:52:42;;;11079:21:45;11136:2;11116:18;;;11109:30;11175:16;11155:18;;;11148:44;11209:18;;1650:52:42;10895:338:45;1650:52:42;889:9;1720;:27;1712:53;;;;;;;7537:2:45;1712:53:42;;;7519:21:45;7576:2;7556:18;;;7549:30;7615:15;7595:18;;;7588:43;7648:18;;1712:53:42;7335:337:45;1712:53:42;1825:41;1839:13;1854:5;1861:4;1825:13;:41::i;:::-;1876:30;1882:10;1894:11;;1876:5;:30::i;:::-;1916:11;:13;;;:11;:13;;;:::i;:::-;;;;;;1475:461;;;;:::o;1166:178:19:-;1531:13:18;:11;:13::i;:::-;1255::19::1;:24:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1319:7:::1;1710:6:18::0;;;;;1638:85;1319:7:19::1;1294:43;;;;;;;;;;;;1166:178:::0;:::o;1561:300:27:-;1663:4;1698:40;;;1713:25;1698:40;;:104;;-1:-1:-1;1754:48:27;;;1769:33;1754:48;1698:104;:156;;;-1:-1:-1;876:25:36;861:40;;;;1818:36:27;762:146:36;2116:213:31;2218:4;2241:41;;;2256:26;2241:41;;:81;;;2286:36;2310:11;2286:23;:36::i;16138:241:27:-;16201:7;5799:16;;;:7;:16;;;;;;;;;16263:88;;16309:31;;;;;;;;1200:25:45;;;1173:18;;16309:31:27;1054:177:45;14418:120:27;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;9955:327::-;10022:16;;;10018:87;;10061:33;;;;;10091:1;10061:33;;;969:74:45;942:18;;10061:33:27;823:226:45;10018:87:27;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;10184:27:27;;;;10180:96;;10234:31;;;;;10262:1;10234:31;;;969:74:45;942:18;;10234:31:27;823:226:45;8838:795:27;8924:7;5799:16;;;:7;:16;;;;;;;;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9161:18;;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9368:15;;;;;;;:9;:15;;;;;:20;;;;;;9157:256;9427:16;;;;9423:107;;9487:13;;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;;;;;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:27:o;12013:460::-;12098:16;;;12094:87;;12137:33;;;;;12167:1;12137:33;;;969:74:45;942:18;;12137:33:27;823:226:45;12094:87:27;12190:21;12214:32;12222:2;12226:7;12243:1;12214:7;:32::i;:::-;12190:56;-1:-1:-1;12260:27:27;;;12256:211;;12310:31;;;;;;;;1200:25:45;;;1173:18;;12310:31:27;1054:177:45;12256:211:27;12379:4;12362:21;;:13;:21;;;12358:109;;12406:50;;;;;8278:42:45;8347:15;;;12406:50:27;;;8329:34:45;8379:18;;;8372:34;;;8442:15;;8422:18;;;8415:43;8241:18;;12406:50:27;8066:398:45;1796:162:18;1710:6;;1855:23;1710:6;735:10:33;1855:23:18;1851:101;;1901:40;;;;;735:10:33;1901:40:18;;;969:74:45;942:18;;1901:40:18;823:226:45;637:698:34;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:34;-1:-1:-1;794:41:34;-1:-1:-1;955:28:34;;;971:2;955:28;1010:282;1041:5;;1180:10;1175:2;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:34;1010:282;1256:21;-1:-1:-1;1312:6:34;637:698;-1:-1:-1;;;637:698:34:o;1265:154:35:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;;1265:154;-1:-1:-1;;;;1265:154:35:o;1528:153:19:-;1617:13;1610:20;;;;;;1640:34;1665:8;1640:24;:34::i;15591:312:27:-;15698:22;;;15694:91;;15743:31;;;;;999:42:45;987:55;;15743:31:27;;;969:74:45;942:18;;15743:31:27;823:226:45;15694:91:27;15794:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;15855:41;;586::45;;;15855::27;;559:18:45;15855:41:27;;;;;;;15591:312;;;:::o;16918:782::-;17034:14;;;;:18;17030:664;;17072:71;;;;;:36;;;;;;:71;;735:10:33;;17123:4:27;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:27;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;;;;999:42:45;987:55;;17430:25:27;;;969:74:45;942:18;;17430:25:27;823:226:45;17377:293:27;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17190:51;;;17200:41;17190:51;17186:130;;17272:25;;;;;999:42:45;987:55;;17272:25:27;;;969:74:45;942:18;;17272:25:27;823:226:45;1327:195:40;1415:5;1411:105;;;1677:1;1668:10;;;1651:14;1732:20;;;;;;;;;;:28;;1703:1;1717:4;1709:12;;1703:19;1732:28;;;4787:132:27;;;:::o;1411:105:40:-;1926:1;1917:10;;;1900:14;1981:20;;;;;;;;;;:29;;1952:1;1966:4;1958:12;;1952:19;2005:5;1981:29;;;4787:132:27;;;:::o;14720:662::-;14880:9;:31;;;-1:-1:-1;14893:18:27;;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;15093:18:27;;;;;;;:35;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;-1:-1:-1;4039:25:27;;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;15132:30;15093:69;15089:142;;;15189:27;;;;;999:42:45;987:55;;15189:27:27;;;969:74:45;942:18;;15189:27:27;823:226:45;15089:142:27;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:27;;;;:15;:24;;;;;:29;;;;;;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7252:19;;;7248:186;;7298:31;;;;;;;;1200:25:45;;;1173:18;;7298:31:27;1054:177:45;7248:186:27;7375:44;;;;;3301:42:45;3289:55;;7375:44:27;;;3271:74:45;3361:18;;;3354:34;;;3244:18;;7375:44:27;3097:297:45;12214:916:38;12267:7;;12351:8;12342:17;;12338:103;;12388:8;12379:17;;;-1:-1:-1;12424:2:38;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:38;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:38;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:38;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:38;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:38;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:38:o;1967:290:35:-;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:35;;;;:::i;:::-;;;;2106:116;;;-1:-1:-1;2238:12:35;1967:290;-1:-1:-1;;;1967:290:35:o;2912:187:18:-;3004:6;;;;3020:17;;;;;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6376:272:27:-;6479:4;6514:21;;;;;;;:127;;;6561:7;6552:16;;:5;:16;;;:52;;;-1:-1:-1;4039:25:27;;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;6572:32;6552:88;;;-1:-1:-1;6008:7:27;6034:24;;;:15;:24;;;;;;6608:32;;;;6034:24;;6608:32;6552:88;6495:146;6376:272;-1:-1:-1;;;;6376:272:27:o;9229:147:35:-;9292:7;9322:1;9318;:5;:51;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9318:51;;;-1:-1:-1;9564:13:35;9655:15;;;9690:4;9683:15;9736:4;9720:21;;;9229:147::o;14:177:45:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:180::-;697:6;750:2;738:9;729:7;725:23;721:32;718:52;;;766:1;763;756:12;718:52;-1:-1:-1;789:23:45;;638:180;-1:-1:-1;638:180:45:o;1236:250::-;1321:1;1331:113;1345:6;1342:1;1339:13;1331:113;;;1421:11;;;1415:18;1402:11;;;1395:39;1367:2;1360:10;1331:113;;;-1:-1:-1;;1478:1:45;1460:16;;1453:27;1236:250::o;1491:330::-;1533:3;1571:5;1565:12;1598:6;1593:3;1586:19;1614:76;1683:6;1676:4;1671:3;1667:14;1660:4;1653:5;1649:16;1614:76;:::i;:::-;1735:2;1723:15;1740:66;1719:88;1710:98;;;;1810:4;1706:109;;1491:330;-1:-1:-1;;1491:330:45:o;1826:220::-;1975:2;1964:9;1957:21;1938:4;1995:45;2036:2;2025:9;2021:18;2013:6;1995:45;:::i;2051:196::-;2119:20;;2179:42;2168:54;;2158:65;;2148:93;;2237:1;2234;2227:12;2148:93;2051:196;;;:::o;2252:254::-;2320:6;2328;2381:2;2369:9;2360:7;2356:23;2352:32;2349:52;;;2397:1;2394;2387:12;2349:52;2420:29;2439:9;2420:29;:::i;:::-;2410:39;2496:2;2481:18;;;;2468:32;;-1:-1:-1;;;2252:254:45:o;2511:328::-;2588:6;2596;2604;2657:2;2645:9;2636:7;2632:23;2628:32;2625:52;;;2673:1;2670;2663:12;2625:52;2696:29;2715:9;2696:29;:::i;:::-;2686:39;;2744:38;2778:2;2767:9;2763:18;2744:38;:::i;:::-;2734:48;;2829:2;2818:9;2814:18;2801:32;2791:42;;2511:328;;;;;:::o;2844:248::-;2912:6;2920;2973:2;2961:9;2952:7;2948:23;2944:32;2941:52;;;2989:1;2986;2979:12;2941:52;-1:-1:-1;;3012:23:45;;;3082:2;3067:18;;;3054:32;;-1:-1:-1;2844:248:45:o;3581:186::-;3640:6;3693:2;3681:9;3672:7;3668:23;3664:32;3661:52;;;3709:1;3706;3699:12;3661:52;3732:29;3751:9;3732:29;:::i;3772:757::-;3876:6;3884;3892;3900;3953:2;3941:9;3932:7;3928:23;3924:32;3921:52;;;3969:1;3966;3959:12;3921:52;3992:29;4011:9;3992:29;:::i;:::-;3982:39;;4072:2;4061:9;4057:18;4044:32;4095:18;4136:2;4128:6;4125:14;4122:34;;;4152:1;4149;4142:12;4122:34;4190:6;4179:9;4175:22;4165:32;;4235:7;4228:4;4224:2;4220:13;4216:27;4206:55;;4257:1;4254;4247:12;4206:55;4297:2;4284:16;4323:2;4315:6;4312:14;4309:34;;;4339:1;4336;4329:12;4309:34;4392:7;4387:2;4377:6;4374:1;4370:14;4366:2;4362:23;4358:32;4355:45;4352:65;;;4413:1;4410;4403:12;4352:65;3772:757;;4444:2;4436:11;;;;;-1:-1:-1;4466:6:45;;4519:2;4504:18;4491:32;;-1:-1:-1;3772:757:45;-1:-1:-1;;;3772:757:45:o;4534:347::-;4599:6;4607;4660:2;4648:9;4639:7;4635:23;4631:32;4628:52;;;4676:1;4673;4666:12;4628:52;4699:29;4718:9;4699:29;:::i;:::-;4689:39;;4778:2;4767:9;4763:18;4750:32;4825:5;4818:13;4811:21;4804:5;4801:32;4791:60;;4847:1;4844;4837:12;4791:60;4870:5;4860:15;;;4534:347;;;;;:::o;4886:184::-;4938:77;4935:1;4928:88;5035:4;5032:1;5025:15;5059:4;5056:1;5049:15;5075:1197;5170:6;5178;5186;5194;5247:3;5235:9;5226:7;5222:23;5218:33;5215:53;;;5264:1;5261;5254:12;5215:53;5287:29;5306:9;5287:29;:::i;:::-;5277:39;;5335:38;5369:2;5358:9;5354:18;5335:38;:::i;:::-;5325:48;;5420:2;5409:9;5405:18;5392:32;5382:42;;5475:2;5464:9;5460:18;5447:32;5498:18;5539:2;5531:6;5528:14;5525:34;;;5555:1;5552;5545:12;5525:34;5593:6;5582:9;5578:22;5568:32;;5638:7;5631:4;5627:2;5623:13;5619:27;5609:55;;5660:1;5657;5650:12;5609:55;5696:2;5683:16;5718:2;5714;5711:10;5708:36;;;5724:18;;:::i;:::-;5858:2;5852:9;5920:4;5912:13;;5763:66;5908:22;;;5932:2;5904:31;5900:40;5888:53;;;5956:18;;;5976:22;;;5953:46;5950:72;;;6002:18;;:::i;:::-;6042:10;6038:2;6031:22;6077:2;6069:6;6062:18;6117:7;6112:2;6107;6103;6099:11;6095:20;6092:33;6089:53;;;6138:1;6135;6128:12;6089:53;6194:2;6189;6185;6181:11;6176:2;6168:6;6164:15;6151:46;6239:1;6234:2;6229;6221:6;6217:15;6213:24;6206:35;6260:6;6250:16;;;;;;;5075:1197;;;;;;;:::o;6277:260::-;6345:6;6353;6406:2;6394:9;6385:7;6381:23;6377:32;6374:52;;;6422:1;6419;6412:12;6374:52;6445:29;6464:9;6445:29;:::i;:::-;6435:39;;6493:38;6527:2;6516:9;6512:18;6493:38;:::i;:::-;6483:48;;6277:260;;;;;:::o;6542:437::-;6621:1;6617:12;;;;6664;;;6685:61;;6739:4;6731:6;6727:17;6717:27;;6685:61;6792:2;6784:6;6781:14;6761:18;6758:38;6755:218;;6829:77;6826:1;6819:88;6930:4;6927:1;6920:15;6958:4;6955:1;6948:15;6755:218;;6542:437;;;:::o;7677:184::-;7729:77;7726:1;7719:88;7826:4;7823:1;7816:15;7850:4;7847:1;7840:15;7866:195;7905:3;7936:66;7929:5;7926:77;7923:103;;8006:18;;:::i;:::-;-1:-1:-1;8053:1:45;8042:13;;7866:195::o;8469:168::-;8542:9;;;8573;;8590:15;;;8584:22;;8570:37;8560:71;;8611:18;;:::i;8831:274::-;8871:1;8897;8887:189;;8932:77;8929:1;8922:88;9033:4;9030:1;9023:15;9061:4;9058:1;9051:15;8887:189;-1:-1:-1;9090:9:45;;8831:274::o;9110:128::-;9177:9;;;9198:11;;;9195:37;;;9212:18;;:::i;9595:445::-;9805:66;9796:6;9792:2;9788:15;9784:88;9779:3;9772:101;9754:3;9902:6;9896:13;9918:75;9986:6;9981:2;9976:3;9972:12;9965:4;9957:6;9953:17;9918:75;:::i;:::-;10013:16;;;;10031:2;10009:25;;9595:445;-1:-1:-1;;;9595:445:45:o;10394:496::-;10573:3;10611:6;10605:13;10627:66;10686:6;10681:3;10674:4;10666:6;10662:17;10627:66;:::i;:::-;10756:13;;10715:16;;;;10778:70;10756:13;10715:16;10825:4;10813:17;;10778:70;:::i;:::-;10864:20;;10394:496;-1:-1:-1;;;;10394:496:45:o;11238:512::-;11432:4;11461:42;11542:2;11534:6;11530:15;11519:9;11512:34;11594:2;11586:6;11582:15;11577:2;11566:9;11562:18;11555:43;;11634:6;11629:2;11618:9;11614:18;11607:34;11677:3;11672:2;11661:9;11657:18;11650:31;11698:46;11739:3;11728:9;11724:19;11716:6;11698:46;:::i;:::-;11690:54;11238:512;-1:-1:-1;;;;;;11238:512:45:o;11755:249::-;11824:6;11877:2;11865:9;11856:7;11852:23;11848:32;11845:52;;;11893:1;11890;11883:12;11845:52;11925:9;11919:16;11944:30;11968:5;11944:30;:::i;12009:184::-;12061:77;12058:1;12051:88;12158:4;12155:1;12148:15;12182:4;12179:1;12172:15",
    "linkReferences": {},
    "immutableReferences": {
      "48736": [
        {
          "start": 899,
          "length": 32
        },
        {
          "start": 3048,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DISCOUNT_PRICE()": "057707a0",
    "MAX_SUPPLY()": "32cb6b0c",
    "PRICE()": "8d859f3e",
    "_verifyEligible(address,bytes32[],uint256)": "4cda0990",
    "acceptOwnership()": "79ba5097",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "merkleRoot()": "2eb4a7ab",
    "mint()": "1249c58b",
    "mintDiscount(address,bytes32[],uint256)": "edcb1216",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "owners(uint256)": "025e7c27",
    "pendingOwner()": "e30c3978",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenSupply()": "7824407f",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferNFT(address)": "36e986ef",
    "transferOwnership(address)": "f2fde38b",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_artist\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISCOUNT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"_verifyEligible\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mintDiscount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingContract\",\"type\":\"address\"}],\"name\":\"transferNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NFTSpecial.sol\":\"NFTSpecial\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\"lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48\",\"dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x87e4eac873515f713e858d72150a7d2a69ddd531967e60a5d6ba77127db1fd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0767e22e108183ebab97542c97bb95a619c96b4b6a7f59513c7320a501b1f355\",\"dweb:/ipfs/Qma2MBaEbZcutxkdrEUEayrV1FXQF1qLpYJGpGo49iGHux\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol\":{\"keccak256\":\"0x3616f1b0d0a9ee1ca8f0953ecaceb9230e36f691c7974d30f964212acff52d2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bebdd07b31ac28e3e596ac6f0333da90a4e332405aa7d65f3a3a7e0b4cf15e\",\"dweb:/ipfs/QmckoDU5bBnye2UtPcrfJNahLD2FbxrnPP9nrREMWPpnug\"]},\"src/NFTSpecial.sol\":{\"keccak256\":\"0x10ede1c9f9856d4802c28c55c41eeff46fc9cbdfa86e0a9cea8697d81f4d9d6a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7ed77c735bec7f1b6d92142107b90d1a1f0aea22cfff4b68d4ac454c1de65e26\",\"dweb:/ipfs/QmYdwwUrHZHptNwQ9G71GET8fAy68TckkHy4n7Pd8TGj6t\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "_artist",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "denominator",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC2981InvalidDefaultRoyalty"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2981InvalidDefaultRoyaltyReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numerator",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "denominator",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC2981InvalidTokenRoyalty"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC2981InvalidTokenRoyaltyReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DISCOUNT_PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SUPPLY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_verifyEligible"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintDiscount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "owners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "stakingContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferNFT"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/NFTSpecial.sol": "NFTSpecial"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688",
        "urls": [
          "bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48",
          "dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
        "keccak256": "0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1",
        "urls": [
          "bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea",
          "dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol": {
        "keccak256": "0x87e4eac873515f713e858d72150a7d2a69ddd531967e60a5d6ba77127db1fd54",
        "urls": [
          "bzz-raw://0767e22e108183ebab97542c97bb95a619c96b4b6a7f59513c7320a501b1f355",
          "dweb:/ipfs/Qma2MBaEbZcutxkdrEUEayrV1FXQF1qLpYJGpGo49iGHux"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
        "urls": [
          "bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
          "dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol": {
        "keccak256": "0x3616f1b0d0a9ee1ca8f0953ecaceb9230e36f691c7974d30f964212acff52d2b",
        "urls": [
          "bzz-raw://d4bebdd07b31ac28e3e596ac6f0333da90a4e332405aa7d65f3a3a7e0b4cf15e",
          "dweb:/ipfs/QmckoDU5bBnye2UtPcrfJNahLD2FbxrnPP9nrREMWPpnug"
        ],
        "license": "MIT"
      },
      "src/NFTSpecial.sol": {
        "keccak256": "0x10ede1c9f9856d4802c28c55c41eeff46fc9cbdfa86e0a9cea8697d81f4d9d6a",
        "urls": [
          "bzz-raw://7ed77c735bec7f1b6d92142107b90d1a1f0aea22cfff4b68d4ac454c1de65e26",
          "dweb:/ipfs/QmYdwwUrHZHptNwQ9G71GET8fAy68TckkHy4n7Pd8TGj6t"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/NFTSpecial.sol",
    "id": 48970,
    "exportedSymbols": {
      "BitMaps": [
        48510
      ],
      "Context": [
        46385
      ],
      "ERC165": [
        47201
      ],
      "ERC20": [
        44254
      ],
      "ERC2981": [
        46110
      ],
      "ERC721": [
        45693
      ],
      "IERC165": [
        47213
      ],
      "IERC20": [
        44332
      ],
      "IERC20Errors": [
        43644
      ],
      "IERC20Metadata": [
        44358
      ],
      "IERC2981": [
        43602
      ],
      "Math": [
        48267
      ],
      "MerkleProof": [
        47177
      ],
      "NFTSpecial": [
        48969
      ],
      "Ownable": [
        43496
      ],
      "Ownable2Step": [
        43582
      ],
      "SignedMath": [
        48372
      ],
      "Strings": [
        46640
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2717:42",
    "nodes": [
      {
        "id": 48712,
        "nodeType": "PragmaDirective",
        "src": "39:24:42",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 48713,
        "nodeType": "ImportDirective",
        "src": "65:55:42",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48970,
        "sourceUnit": 44255,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48715,
        "nodeType": "ImportDirective",
        "src": "121:71:42",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48970,
        "sourceUnit": 45694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48714,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45693,
              "src": "129:6:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48716,
        "nodeType": "ImportDirective",
        "src": "193:58:42",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "file": "@openzeppelin/contracts/token/common/ERC2981.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48970,
        "sourceUnit": 46111,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48717,
        "nodeType": "ImportDirective",
        "src": "252:57:42",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48970,
        "sourceUnit": 43583,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48719,
        "nodeType": "ImportDirective",
        "src": "310:74:42",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol",
        "file": "@openzeppelin/contracts/utils/structs/BitMaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48970,
        "sourceUnit": 48511,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48718,
              "name": "BitMaps",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48510,
              "src": "318:7:42",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48720,
        "nodeType": "ImportDirective",
        "src": "385:68:42",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48970,
        "sourceUnit": 47178,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48721,
        "nodeType": "ImportDirective",
        "src": "454:51:42",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48970,
        "sourceUnit": 46641,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48969,
        "nodeType": "ContractDefinition",
        "src": "507:2248:42",
        "nodes": [
          {
            "id": 48731,
            "nodeType": "UsingForDirective",
            "src": "566:33:42",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48728,
              "name": "BitMaps",
              "nameLocations": [
                "572:7:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48510,
              "src": "572:7:42"
            },
            "typeName": {
              "id": 48730,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48729,
                "name": "BitMaps.BitMap",
                "nameLocations": [
                  "584:7:42",
                  "592:6:42"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48380,
                "src": "584:14:42"
              },
              "referencedDeclaration": 48380,
              "src": "584:14:42",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BitMap_$48380_storage_ptr",
                "typeString": "struct BitMaps.BitMap"
              }
            }
          },
          {
            "id": 48734,
            "nodeType": "UsingForDirective",
            "src": "604:26:42",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48732,
              "name": "Strings",
              "nameLocations": [
                "610:7:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46640,
              "src": "610:7:42"
            },
            "typeName": {
              "id": 48733,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "622:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 48736,
            "nodeType": "VariableDeclaration",
            "src": "636:35:42",
            "nodes": [],
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "mutability": "immutable",
            "name": "merkleRoot",
            "nameLocation": "661:10:42",
            "scope": 48969,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 48735,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48739,
            "nodeType": "VariableDeclaration",
            "src": "677:36:42",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_discountList",
            "nameLocation": "700:13:42",
            "scope": 48969,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_BitMap_$48380_storage",
              "typeString": "struct BitMaps.BitMap"
            },
            "typeName": {
              "id": 48738,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48737,
                "name": "BitMaps.BitMap",
                "nameLocations": [
                  "677:7:42",
                  "685:6:42"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48380,
                "src": "677:14:42"
              },
              "referencedDeclaration": 48380,
              "src": "677:14:42",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BitMap_$48380_storage_ptr",
                "typeString": "struct BitMaps.BitMap"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48742,
            "nodeType": "VariableDeclaration",
            "src": "719:30:42",
            "nodes": [],
            "constant": false,
            "functionSelector": "7824407f",
            "mutability": "mutable",
            "name": "tokenSupply",
            "nameLocation": "734:11:42",
            "scope": 48969,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48740,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "719:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 48741,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "748:1:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 48745,
            "nodeType": "VariableDeclaration",
            "src": "755:42:42",
            "nodes": [],
            "constant": true,
            "functionSelector": "32cb6b0c",
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "779:10:42",
            "scope": 48969,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48743,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "755:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f303030",
              "id": 48744,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "792:5:42",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1_000"
            },
            "visibility": "public"
          },
          {
            "id": 48748,
            "nodeType": "VariableDeclaration",
            "src": "803:39:42",
            "nodes": [],
            "constant": true,
            "functionSelector": "8d859f3e",
            "mutability": "constant",
            "name": "PRICE",
            "nameLocation": "827:5:42",
            "scope": 48969,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48746,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "803:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 48747,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "835:7:42",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 48751,
            "nodeType": "VariableDeclaration",
            "src": "848:50:42",
            "nodes": [],
            "constant": true,
            "functionSelector": "057707a0",
            "mutability": "constant",
            "name": "DISCOUNT_PRICE",
            "nameLocation": "872:14:42",
            "scope": 48969,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48749,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "848:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e38",
              "id": 48750,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "889:9:42",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_800000000000000000_by_1",
                "typeString": "int_const 800000000000000000"
              },
              "value": "0.8"
            },
            "visibility": "public"
          },
          {
            "id": 48755,
            "nodeType": "VariableDeclaration",
            "src": "952:41:42",
            "nodes": [],
            "constant": false,
            "functionSelector": "025e7c27",
            "mutability": "mutable",
            "name": "owners",
            "nameLocation": "987:6:42",
            "scope": 48969,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 48754,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 48752,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "960:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "952:27:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 48753,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "971:7:42",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 48781,
            "nodeType": "FunctionDefinition",
            "src": "1000:191:42",
            "nodes": [],
            "body": {
              "id": 48780,
              "nodeType": "Block",
              "src": "1108:83:42",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48771,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48736,
                      "src": "1118:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48772,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48759,
                      "src": "1131:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1118:24:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 48774,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:24:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48776,
                        "name": "_artist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48761,
                        "src": "1171:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "323530",
                        "id": 48777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1180:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_250_by_1",
                          "typeString": "int_const 250"
                        },
                        "value": "250"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_250_by_1",
                          "typeString": "int_const 250"
                        }
                      ],
                      "id": 48775,
                      "name": "_setDefaultRoyalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46037,
                      "src": "1152:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$",
                        "typeString": "function (address,uint96)"
                      }
                    },
                    "id": 48778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:32:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48779,
                  "nodeType": "ExpressionStatement",
                  "src": "1152:32:42"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4e46545370656369616c",
                    "id": 48764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1072:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6f024f0e8f4ece37189f1ad70bc9dc9cc6ff487583a7293e5c453684ecba187f",
                      "typeString": "literal_string \"NFTSpecial\""
                    },
                    "value": "NFTSpecial"
                  },
                  {
                    "hexValue": "4e4653",
                    "id": 48765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1086:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6fb59aa4caa531fd04a534a9f6965aa8bd97720a6c1888106add3f30d7557f05",
                      "typeString": "literal_string \"NFS\""
                    },
                    "value": "NFS"
                  }
                ],
                "id": 48766,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48763,
                  "name": "ERC721",
                  "nameLocations": [
                    "1065:6:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45693,
                  "src": "1065:6:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "1065:27:42"
              },
              {
                "arguments": [
                  {
                    "id": 48768,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48757,
                    "src": "1101:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 48769,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48767,
                  "name": "Ownable",
                  "nameLocations": [
                    "1093:7:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43496,
                  "src": "1093:7:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "1093:14:42"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48757,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1020:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48781,
                  "src": "1012:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48759,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "1035:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48781,
                  "src": "1027:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48758,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48761,
                  "mutability": "mutable",
                  "name": "_artist",
                  "nameLocation": "1056:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48781,
                  "src": "1048:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:53:42"
            },
            "returnParameters": {
              "id": 48770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:0:42"
            },
            "scope": 48969,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48814,
            "nodeType": "FunctionDefinition",
            "src": "1197:272:42",
            "nodes": [],
            "body": {
              "id": 48813,
              "nodeType": "Block",
              "src": "1292:177:42",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48792,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "1310:4:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 48813,
                      "src": "1302:12:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 48791,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1302:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48802,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48796,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48783,
                            "src": "1344:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 48797,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48788,
                                "src": "1352:5:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 48798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1358:8:42",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46453,
                              "src": "1352:14:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 48799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1352:16:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 48794,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1327:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 48795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1331:12:42",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1327:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 48800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1327:42:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48793,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1317:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 48801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:53:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1302:68:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48806,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48786,
                            "src": "1407:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 48807,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48736,
                            "src": "1420:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 48808,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48792,
                            "src": "1432:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 48804,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47177,
                            "src": "1388:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$47177_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 48805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1400:6:42",
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46667,
                          "src": "1388:18:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 48809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1388:49:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c652070726f6f66",
                        "id": 48810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1439:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410",
                          "typeString": "literal_string \"Invalid merkle proof\""
                        },
                        "value": "Invalid merkle proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e0b6a3c3c2892dcc46975fd4747d409a6200f0f6763c4000ee1783c7e6b5410",
                          "typeString": "literal_string \"Invalid merkle proof\""
                        }
                      ],
                      "id": 48803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1380:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:82:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48812,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:82:42"
                }
              ]
            },
            "functionSelector": "4cda0990",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyEligible",
            "nameLocation": "1206:15:42",
            "parameters": {
              "id": 48789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48783,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1230:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48814,
                  "src": "1222:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48786,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "1257:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48814,
                  "src": "1238:30:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48784,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1238:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 48785,
                    "nodeType": "ArrayTypeName",
                    "src": "1238:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48788,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1278:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48814,
                  "src": "1270:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:63:42"
            },
            "returnParameters": {
              "id": 48790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1292:0:42"
            },
            "scope": 48969,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48866,
            "nodeType": "FunctionDefinition",
            "src": "1475:461:42",
            "nodes": [],
            "body": {
              "id": 48865,
              "nodeType": "Block",
              "src": "1571:365:42",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48825,
                          "name": "tokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48742,
                          "src": "1589:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 48826,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48745,
                          "src": "1603:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1589:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20737570706c792072656163686564",
                        "id": 48828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1615:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
                          "typeString": "literal_string \"Maximum supply reached\""
                        },
                        "value": "Maximum supply reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
                          "typeString": "literal_string \"Maximum supply reached\""
                        }
                      ],
                      "id": 48824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1581:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:59:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48830,
                  "nodeType": "ExpressionStatement",
                  "src": "1581:59:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1658:25:42",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 48834,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48821,
                              "src": "1677:5:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 48832,
                              "name": "_discountList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48739,
                              "src": "1659:13:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BitMap_$48380_storage",
                                "typeString": "struct BitMaps.BitMap storage ref"
                              }
                            },
                            "id": 48833,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1673:3:42",
                            "memberName": "get",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48416,
                            "src": "1659:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_BitMap_$48380_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_BitMap_$48380_storage_ptr_$",
                              "typeString": "function (struct BitMaps.BitMap storage pointer,uint256) view returns (bool)"
                            }
                          },
                          "id": 48835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1659:24:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206d696e746564",
                        "id": 48837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:16:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
                          "typeString": "literal_string \"Already minted\""
                        },
                        "value": "Already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
                          "typeString": "literal_string \"Already minted\""
                        }
                      ],
                      "id": 48831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1650:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:52:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48839,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:52:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48841,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1720:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 48842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1724:5:42",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1720:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 48843,
                          "name": "DISCOUNT_PRICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48751,
                          "src": "1733:14:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1720:27:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207072696365",
                        "id": 48845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1749:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                          "typeString": "literal_string \"Invalid price\""
                        },
                        "value": "Invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                          "typeString": "literal_string \"Invalid price\""
                        }
                      ],
                      "id": 48840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1712:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1712:53:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48847,
                  "nodeType": "ExpressionStatement",
                  "src": "1712:53:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48851,
                        "name": "_discountList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48739,
                        "src": "1839:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BitMap_$48380_storage",
                          "typeString": "struct BitMaps.BitMap storage ref"
                        }
                      },
                      {
                        "id": 48852,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48821,
                        "src": "1854:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1861:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BitMap_$48380_storage",
                          "typeString": "struct BitMaps.BitMap storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 48848,
                        "name": "BitMaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48510,
                        "src": "1825:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BitMaps_$48510_$",
                          "typeString": "type(library BitMaps)"
                        }
                      },
                      "id": 48850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1833:5:42",
                      "memberName": "setTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48442,
                      "src": "1825:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BitMap_$48380_storage_ptr_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct BitMaps.BitMap storage pointer,uint256,bool)"
                      }
                    },
                    "id": 48854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:41:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48855,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:41:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48857,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1882:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1886:6:42",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1882:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48859,
                        "name": "tokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48742,
                        "src": "1894:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48856,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45300,
                      "src": "1876:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 48860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:30:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48861,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:30:42"
                },
                {
                  "expression": {
                    "id": 48863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1916:13:42",
                    "subExpression": {
                      "id": 48862,
                      "name": "tokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48742,
                      "src": "1916:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48864,
                  "nodeType": "ExpressionStatement",
                  "src": "1916:13:42"
                }
              ]
            },
            "functionSelector": "edcb1216",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintDiscount",
            "nameLocation": "1484:12:42",
            "parameters": {
              "id": 48822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48816,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1505:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48866,
                  "src": "1497:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48819,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1532:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48866,
                  "src": "1513:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48817,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1513:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 48818,
                    "nodeType": "ArrayTypeName",
                    "src": "1513:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48821,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1547:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48866,
                  "src": "1539:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:57:42"
            },
            "returnParameters": {
              "id": 48823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1571:0:42"
            },
            "scope": 48969,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48901,
            "nodeType": "FunctionDefinition",
            "src": "1942:268:42",
            "nodes": [],
            "body": {
              "id": 48900,
              "nodeType": "Block",
              "src": "1975:235:42",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48870,
                          "name": "tokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48742,
                          "src": "1993:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 48871,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48745,
                          "src": "2007:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1993:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20737570706c792072656163686564",
                        "id": 48873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2019:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
                          "typeString": "literal_string \"Maximum supply reached\""
                        },
                        "value": "Maximum supply reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6be7da67171dbe543876200a3adc009172d7c67658279f5f514229a2405fedb2",
                          "typeString": "literal_string \"Maximum supply reached\""
                        }
                      ],
                      "id": 48869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1985:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:59:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48875,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:59:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48877,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2062:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 48878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2066:5:42",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2062:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 48879,
                          "name": "PRICE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48748,
                          "src": "2075:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2062:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207072696365",
                        "id": 48881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2082:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                          "typeString": "literal_string \"Invalid price\""
                        },
                        "value": "Invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                          "typeString": "literal_string \"Invalid price\""
                        }
                      ],
                      "id": 48876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2054:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:44:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48883,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:44:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48885,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2114:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2118:6:42",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2114:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48887,
                        "name": "tokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48742,
                        "src": "2126:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48884,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45300,
                      "src": "2108:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 48888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2108:30:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48889,
                  "nodeType": "ExpressionStatement",
                  "src": "2108:30:42"
                },
                {
                  "expression": {
                    "id": 48895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 48890,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48755,
                        "src": "2148:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 48892,
                      "indexExpression": {
                        "id": 48891,
                        "name": "tokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48742,
                        "src": "2155:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2148:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 48893,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2170:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 48894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2174:6:42",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2170:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2148:32:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48896,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:32:42"
                },
                {
                  "expression": {
                    "id": 48898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2190:13:42",
                    "subExpression": {
                      "id": 48897,
                      "name": "tokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48742,
                      "src": "2190:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48899,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:13:42"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1951:4:42",
            "parameters": {
              "id": 48867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1955:2:42"
            },
            "returnParameters": {
              "id": 48868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1975:0:42"
            },
            "scope": 48969,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48920,
            "nodeType": "FunctionDefinition",
            "src": "2216:104:42",
            "nodes": [],
            "body": {
              "id": 48919,
              "nodeType": "Block",
              "src": "2255:65:42",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48914,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2299:4:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTSpecial_$48969",
                                "typeString": "contract NFTSpecial"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTSpecial_$48969",
                                "typeString": "contract NFTSpecial"
                              }
                            ],
                            "id": 48913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2291:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48912,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2291:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2291:13:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2305:7:42",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2291:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 48908,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43416,
                              "src": "2273:5:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 48909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2273:7:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2265:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 48906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2265:8:42",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2265:16:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 48911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2282:8:42",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2265:25:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 48917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2265:48:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48918,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:48:42"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48904,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48903,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2245:9:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43407,
                  "src": "2245:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "2245:9:42"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2225:8:42",
            "parameters": {
              "id": 48902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:2:42"
            },
            "returnParameters": {
              "id": 48905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2255:0:42"
            },
            "scope": 48969,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48947,
            "nodeType": "FunctionDefinition",
            "src": "2326:210:42",
            "nodes": [],
            "body": {
              "id": 48946,
              "nodeType": "Block",
              "src": "2381:155:42",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 48926,
                            "name": "owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48755,
                            "src": "2399:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 48930,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 48929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 48927,
                              "name": "tokenSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48742,
                              "src": "2406:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 48928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2420:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2406:15:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2399:23:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 48931,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2426:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 48932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2430:6:42",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2426:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2399:37:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e207472616e73666572",
                        "id": 48934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2438:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33",
                          "typeString": "literal_string \"Only owner can transfer\""
                        },
                        "value": "Only owner can transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33",
                          "typeString": "literal_string \"Only owner can transfer\""
                        }
                      ],
                      "id": 48925,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2391:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2391:73:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48936,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:73:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48938,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2484:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2488:6:42",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2484:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48940,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48922,
                        "src": "2496:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48941,
                          "name": "tokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48742,
                          "src": "2513:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 48942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2527:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2513:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48937,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45434,
                      "src": "2474:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 48944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2474:55:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48945,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:55:42"
                }
              ]
            },
            "functionSelector": "36e986ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferNFT",
            "nameLocation": "2335:11:42",
            "parameters": {
              "id": 48923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48922,
                  "mutability": "mutable",
                  "name": "stakingContract",
                  "nameLocation": "2355:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48947,
                  "src": "2347:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2346:25:42"
            },
            "returnParameters": {
              "id": 48924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2381:0:42"
            },
            "scope": 48969,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48968,
            "nodeType": "FunctionDefinition",
            "src": "2542:211:42",
            "nodes": [],
            "body": {
              "id": 48967,
              "nodeType": "Block",
              "src": "2650:103:42",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 48965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 48959,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48949,
                          "src": "2692:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 48957,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45693,
                          "src": "2667:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$45693_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 48958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2674:17:42",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44785,
                        "src": "2667:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 48960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2667:37:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 48963,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48949,
                          "src": "2734:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 48961,
                          "name": "ERC2981",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46110,
                          "src": "2708:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC2981_$46110_$",
                            "typeString": "type(contract ERC2981)"
                          }
                        },
                        "id": 48962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2716:17:42",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45933,
                        "src": "2708:25:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 48964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2708:38:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2667:79:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 48956,
                  "id": 48966,
                  "nodeType": "Return",
                  "src": "2660:86:42"
                }
              ]
            },
            "baseFunctions": [
              44785,
              45933
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2551:17:42",
            "overrides": {
              "id": 48953,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 48951,
                  "name": "ERC721",
                  "nameLocations": [
                    "2618:6:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45693,
                  "src": "2618:6:42"
                },
                {
                  "id": 48952,
                  "name": "ERC2981",
                  "nameLocations": [
                    "2626:7:42"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46110,
                  "src": "2626:7:42"
                }
              ],
              "src": "2609:25:42"
            },
            "parameters": {
              "id": 48950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48949,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2576:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 48968,
                  "src": "2569:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 48948,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2568:20:42"
            },
            "returnParameters": {
              "id": 48956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48968,
                  "src": "2644:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48954,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2644:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2643:6:42"
            },
            "scope": 48969,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48722,
              "name": "ERC721",
              "nameLocations": [
                "530:6:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45693,
              "src": "530:6:42"
            },
            "id": 48723,
            "nodeType": "InheritanceSpecifier",
            "src": "530:6:42"
          },
          {
            "baseName": {
              "id": 48724,
              "name": "ERC2981",
              "nameLocations": [
                "538:7:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46110,
              "src": "538:7:42"
            },
            "id": 48725,
            "nodeType": "InheritanceSpecifier",
            "src": "538:7:42"
          },
          {
            "baseName": {
              "id": 48726,
              "name": "Ownable2Step",
              "nameLocations": [
                "547:12:42"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43582,
              "src": "547:12:42"
            },
            "id": 48727,
            "nodeType": "InheritanceSpecifier",
            "src": "547:12:42"
          }
        ],
        "canonicalName": "NFTSpecial",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48969,
          43582,
          43496,
          46110,
          45693,
          43692,
          45856,
          45810,
          47201,
          43602,
          47213,
          46385
        ],
        "name": "NFTSpecial",
        "nameLocation": "516:10:42",
        "scope": 48970,
        "usedErrors": [
          43362,
          43367,
          43650,
          43655,
          43664,
          43669,
          43674,
          43681,
          43686,
          43691,
          45888,
          45893,
          45902,
          45909
        ],
        "usedEvents": [
          43373,
          43511,
          45709,
          45718,
          45727
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 42
}