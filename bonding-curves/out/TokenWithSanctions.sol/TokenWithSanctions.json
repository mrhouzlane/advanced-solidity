{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "intialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC1363EOAReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC1363EOASpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC1363InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC1363InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_address",
          "type": "address[]"
        }
      ],
      "name": "banUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "banned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onTransferReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_address",
          "type": "address[]"
        }
      ],
      "name": "unBanUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162002073380380620020738339810160408190526200003491620002d0565b806040518060400160405280600a81526020016952617265536b696c6c7360b01b8152506040518060400160405280600381526020016252534b60e81b8152508160039081620000859190620003a7565b506004620000948282620003a7565b5050506001600160a01b038116620000c757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000d281620000ef565b50620000e8816801158e460913d000006200010d565b506200049b565b600680546001600160a01b03191690556200010a816200014b565b50565b6001600160a01b038216620001395760405163ec442f0560e01b815260006004820152602401620000be565b62000147600083836200019d565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316620001cc578060026000828254620001c0919062000473565b90915550620002409050565b6001600160a01b03831660009081526020819052604090205481811015620002215760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000be565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200025e576002805482900390556200027d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002c391815260200190565b60405180910390a3505050565b600060208284031215620002e357600080fd5b81516001600160a01b0381168114620002fb57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200032d57607f821691505b6020821081036200034e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003a257600081815260208120601f850160051c810160208610156200037d5750805b601f850160051c820191505b818110156200039e5782815560010162000389565b5050505b505050565b81516001600160401b03811115620003c357620003c362000302565b620003db81620003d4845462000318565b8462000354565b602080601f831160018114620004135760008415620003fa5750858301515b600019600386901b1c1916600185901b1785556200039e565b600085815260208120601f198616915b82811015620004445788860151825594840194600190910190840162000423565b5085821015620004635787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200049557634e487b7160e01b600052601160045260246000fd5b92915050565b611bc880620004ab6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c806379ba5097116100ee578063a9059cbb11610097578063d8fbe99411610071578063d8fbe994146103fd578063dd62ed3e14610410578063e30c397814610456578063f2fde38b1461047457600080fd5b8063a9059cbb146103c4578063c1d34b89146103d7578063cae9ca51146103ea57600080fd5b80638da5cb5b116100c85780638da5cb5b1461035a57806395d89b41146103995780639c8d83bb146103a157600080fd5b806379ba5097146102d65780637f205499146102de57806388a7ca5c146102f157600080fd5b8063313ce5671161015b57806340c10f191161013557806340c10f19146102705780634aab6f181461028557806370a0823114610298578063715018a6146102ce57600080fd5b8063313ce5671461023b5780633177029f1461024a5780634000aea01461025d57600080fd5b80631296ee621161018c5780631296ee621461020357806318160ddd1461021657806323b872dd1461022857600080fd5b806301ffc9a7146101b357806306fdde03146101db578063095ea7b3146101f0575b600080fd5b6101c66101c13660046115d8565b610487565b60405190151581526020015b60405180910390f35b6101e3610520565b6040516101d29190611659565b6101c66101fe366004611695565b6105b2565b6101c6610211366004611695565b6105ca565b6002545b6040519081526020016101d2565b6101c66102363660046116bf565b6105ed565b604051601281526020016101d2565b6101c6610258366004611695565b610611565b6101c661026b3660046117d5565b61062d565b61028361027e366004611695565b61064b565b005b61028361029336600461182c565b610661565b61021a6102a63660046118a1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610283610779565b61028361078d565b6102836102ec36600461182c565b610804565b6103296102ff3660046118bc565b7f88a7ca5c0000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101d2565b60055473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d2565b6101e3610911565b6101c66103af3660046118a1565b60076020526000908152604090205460ff1681565b6101c66103d2366004611695565b610920565b6101c66103e5366004611957565b610935565b6101c66103f83660046117d5565b61094f565b6101c661040b3660046116bf565b610967565b61021a61041e3660046119bf565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60065473ffffffffffffffffffffffffffffffffffffffff16610374565b6102836104823660046118a1565b610984565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb0202a1100000000000000000000000000000000000000000000000000000000148061051a57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606003805461052f906119f2565b80601f016020809104026020016040519081016040528092919081815260200182805461055b906119f2565b80156105a85780601f1061057d576101008083540402835291602001916105a8565b820191906000526020600020905b81548152906001019060200180831161058b57829003601f168201915b5050505050905090565b6000336105c0818585610a34565b5060019392505050565b60006105e683836040518060200160405280600081525061062d565b9392505050565b6000336105fb858285610a46565b610606858585610b0f565b506001949350505050565b60006105e683836040518060200160405280600081525061094f565b600061063884610bba565b610643848484610cc4565b949350505050565b610653610cdd565b61065d8282610d30565b5050565b610669610cdd565b806106d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f206164647265737320746f20756e62616e0000000000000000000000000060448201526064015b60405180910390fd5b8060005b81811015610773576000600760008686858181106106f9576106f9611a45565b905060200201602081019061070e91906118a1565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558061076b81611aa3565b9150506106d9565b50505050565b610781610cdd565b61078b6000610d8c565b565b600654339073ffffffffffffffffffffffffffffffffffffffff1681146107f8576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016106cc565b61080181610d8c565b50565b61080c610cdd565b80610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f206164647265737320746f2062616e00000000000000000000000000000060448201526064016106cc565b8060005b818110156107735760016007600086868581811061089757610897611a45565b90506020020160208101906108ac91906118a1565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558061090981611aa3565b915050610877565b60606004805461052f906119f2565b600061092b83610bba565b6105e68383610dbd565b60006109428585856105ed565b5061060685858585610dcb565b600061095b84846105b2565b506105c084848461100e565b600061064384848460405180602001604052806000815250610935565b61098c610cdd565b6006805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000090911681179091556109ef60055473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610a418383836001611240565b505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107735781811015610b00576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064016106cc565b61077384848484036000611240565b73ffffffffffffffffffffffffffffffffffffffff8316610b5f576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff8216610baf576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b610a41838383611388565b3360009081526007602052604090205460ff1615610c34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e6465722069732062616e6e65640000000000000000000000000000000060448201526064016106cc565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602052604090205460ff1615610801576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f526563697069656e742069732062616e6e65640000000000000000000000000060448201526064016106cc565b6000610cd08484610920565b506105c033858585610dcb565b60055473ffffffffffffffffffffffffffffffffffffffff16331461078b576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff8216610d80576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b61065d60008383611388565b600680547fffffffffffffffffffffffff000000000000000000000000000000000000000016905561080181611533565b6000336105c0818585610b0f565b8273ffffffffffffffffffffffffffffffffffffffff163b600003610e34576040517f14b41af400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016106cc565b6040517f88a7ca5c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906388a7ca5c90610e8c903390889087908790600401611adb565b6020604051808303816000875af1925050508015610ee5575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610ee291810190611b24565b60015b610f74573d808015610f13576040519150601f19603f3d011682016040523d82523d6000602084013e610f18565b606091505b508051600003610f6c576040517f8a96cd9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106cc565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f88a7ca5c0000000000000000000000000000000000000000000000000000000014611007576040517f8a96cd9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106cc565b5050505050565b8273ffffffffffffffffffffffffffffffffffffffff163b600003611077576040517f0778150c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016106cc565b6040517f7b04a2d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690637b04a2d0906110cd90339086908690600401611b41565b6020604051808303816000875af1925050508015611126575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261112391810190611b24565b60015b6111ad573d808015611154576040519150601f19603f3d011682016040523d82523d6000602084013e611159565b606091505b508051600003610f6c576040517fdeb6d3ed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106cc565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f7b04a2d00000000000000000000000000000000000000000000000000000000014610773576040517fdeb6d3ed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff8416611290576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff83166112e0576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602090815260408083209387168352929052208290558015610773578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161137a91815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff83166113c05780600260008282546113b59190611b7f565b909155506114729050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015611446576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101829052604481018390526064016106cc565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff821661149b576002805482900390556114c7565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152691815260200190565b60405180910390a3505050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461080157600080fd5b6000602082840312156115ea57600080fd5b81356105e6816115aa565b6000815180845260005b8181101561161b576020818501810151868301820152016115ff565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006105e660208301846115f5565b803573ffffffffffffffffffffffffffffffffffffffff8116811461169057600080fd5b919050565b600080604083850312156116a857600080fd5b6116b18361166c565b946020939093013593505050565b6000806000606084860312156116d457600080fd5b6116dd8461166c565b92506116eb6020850161166c565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261173b57600080fd5b813567ffffffffffffffff80821115611756576117566116fb565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561179c5761179c6116fb565b816040528381528660208588010111156117b557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156117ea57600080fd5b6117f38461166c565b925060208401359150604084013567ffffffffffffffff81111561181657600080fd5b6118228682870161172a565b9150509250925092565b6000806020838503121561183f57600080fd5b823567ffffffffffffffff8082111561185757600080fd5b818501915085601f83011261186b57600080fd5b81358181111561187a57600080fd5b8660208260051b850101111561188f57600080fd5b60209290920196919550909350505050565b6000602082840312156118b357600080fd5b6105e68261166c565b6000806000806000608086880312156118d457600080fd5b6118dd8661166c565b94506118eb6020870161166c565b935060408601359250606086013567ffffffffffffffff8082111561190f57600080fd5b818801915088601f83011261192357600080fd5b81358181111561193257600080fd5b89602082850101111561194457600080fd5b9699959850939650602001949392505050565b6000806000806080858703121561196d57600080fd5b6119768561166c565b93506119846020860161166c565b925060408501359150606085013567ffffffffffffffff8111156119a757600080fd5b6119b38782880161172a565b91505092959194509250565b600080604083850312156119d257600080fd5b6119db8361166c565b91506119e96020840161166c565b90509250929050565b600181811c90821680611a0657607f821691505b602082108103611a3f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ad457611ad4611a74565b5060010190565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611b1a60808301846115f5565b9695505050505050565b600060208284031215611b3657600080fd5b81516105e6816115aa565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000611b7660608301846115f5565b95945050505050565b8082018082111561051a5761051a611a7456fea2646970667358221220c5b3f973ab5f470272694cefbc7f8b4a831c12d63d1b83c51923097bbffcf64464736f6c63430008140033",
    "sourceMap": "712:2199:21:-:0;;;837:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;905:11;1896:113:8;;;;;;;;;;;;;-1:-1:-1;;;1896:113:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:8;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:8;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:5;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:5;;1350:1;1322:31;;;3176:51:27;3149:18;;1322:31:5;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;928:28:21::2;934:11:::0;947:8:::2;928:5;:28::i;:::-;837:126:::0;712:2199;;1528:153:6;1617:13;1610:20;;-1:-1:-1;;;;;;1610:20:6;;;1640:34;1665:8;1640:24;:34::i;:::-;1528:153;:::o;7721:208:8:-;-1:-1:-1;;;;;7791:21:8;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:8;;7864:1;7835:32;;;3176:51:27;3149:18;;7835:32:8;3030:203:27;7787:91:8;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:5:-;3004:6;;;-1:-1:-1;;;;;3020:17:5;;;-1:-1:-1;;;;;;3020:17:5;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6271:1107:8:-;-1:-1:-1;;;;;6360:18:8;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:8;;-1:-1:-1;6356:540:8;;-1:-1:-1;;;;;6570:15:8;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:8;;-1:-1:-1;;;;;3685:32:27;;6649:50:8;;;3667:51:27;3734:18;;;3727:34;;;3777:18;;;3770:34;;;3640:18;;6649:50:8;3465:345:27;6599:115:8;-1:-1:-1;;;;;6834:15:8;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:8;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:8;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:8;7355:4;-1:-1:-1;;;;;7346:25:8;;7365:5;7346:25;;;;3961::27;;3949:2;3934:18;;3815:177;7346:25:8;;;;;;;;6271:1107;;;:::o;14:290:27:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:27;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:27:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:27;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:27;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:27;;;2875:26;2826:89;-1:-1:-1;;1630:1:27;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:27;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:27;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:27;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:27:o;3238:222::-;3303:9;;;3324:10;;;3321:133;;;3376:10;3371:3;3367:20;3364:1;3357:31;3411:4;3408:1;3401:15;3439:4;3436:1;3429:15;3321:133;3238:222;;;;:::o;3815:177::-;712:2199:21;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101ae5760003560e01c806379ba5097116100ee578063a9059cbb11610097578063d8fbe99411610071578063d8fbe994146103fd578063dd62ed3e14610410578063e30c397814610456578063f2fde38b1461047457600080fd5b8063a9059cbb146103c4578063c1d34b89146103d7578063cae9ca51146103ea57600080fd5b80638da5cb5b116100c85780638da5cb5b1461035a57806395d89b41146103995780639c8d83bb146103a157600080fd5b806379ba5097146102d65780637f205499146102de57806388a7ca5c146102f157600080fd5b8063313ce5671161015b57806340c10f191161013557806340c10f19146102705780634aab6f181461028557806370a0823114610298578063715018a6146102ce57600080fd5b8063313ce5671461023b5780633177029f1461024a5780634000aea01461025d57600080fd5b80631296ee621161018c5780631296ee621461020357806318160ddd1461021657806323b872dd1461022857600080fd5b806301ffc9a7146101b357806306fdde03146101db578063095ea7b3146101f0575b600080fd5b6101c66101c13660046115d8565b610487565b60405190151581526020015b60405180910390f35b6101e3610520565b6040516101d29190611659565b6101c66101fe366004611695565b6105b2565b6101c6610211366004611695565b6105ca565b6002545b6040519081526020016101d2565b6101c66102363660046116bf565b6105ed565b604051601281526020016101d2565b6101c6610258366004611695565b610611565b6101c661026b3660046117d5565b61062d565b61028361027e366004611695565b61064b565b005b61028361029336600461182c565b610661565b61021a6102a63660046118a1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610283610779565b61028361078d565b6102836102ec36600461182c565b610804565b6103296102ff3660046118bc565b7f88a7ca5c0000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101d2565b60055473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d2565b6101e3610911565b6101c66103af3660046118a1565b60076020526000908152604090205460ff1681565b6101c66103d2366004611695565b610920565b6101c66103e5366004611957565b610935565b6101c66103f83660046117d5565b61094f565b6101c661040b3660046116bf565b610967565b61021a61041e3660046119bf565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60065473ffffffffffffffffffffffffffffffffffffffff16610374565b6102836104823660046118a1565b610984565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fb0202a1100000000000000000000000000000000000000000000000000000000148061051a57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606003805461052f906119f2565b80601f016020809104026020016040519081016040528092919081815260200182805461055b906119f2565b80156105a85780601f1061057d576101008083540402835291602001916105a8565b820191906000526020600020905b81548152906001019060200180831161058b57829003601f168201915b5050505050905090565b6000336105c0818585610a34565b5060019392505050565b60006105e683836040518060200160405280600081525061062d565b9392505050565b6000336105fb858285610a46565b610606858585610b0f565b506001949350505050565b60006105e683836040518060200160405280600081525061094f565b600061063884610bba565b610643848484610cc4565b949350505050565b610653610cdd565b61065d8282610d30565b5050565b610669610cdd565b806106d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4e6f206164647265737320746f20756e62616e0000000000000000000000000060448201526064015b60405180910390fd5b8060005b81811015610773576000600760008686858181106106f9576106f9611a45565b905060200201602081019061070e91906118a1565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558061076b81611aa3565b9150506106d9565b50505050565b610781610cdd565b61078b6000610d8c565b565b600654339073ffffffffffffffffffffffffffffffffffffffff1681146107f8576040517f118cdaa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016106cc565b61080181610d8c565b50565b61080c610cdd565b80610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f206164647265737320746f2062616e00000000000000000000000000000060448201526064016106cc565b8060005b818110156107735760016007600086868581811061089757610897611a45565b90506020020160208101906108ac91906118a1565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558061090981611aa3565b915050610877565b60606004805461052f906119f2565b600061092b83610bba565b6105e68383610dbd565b60006109428585856105ed565b5061060685858585610dcb565b600061095b84846105b2565b506105c084848461100e565b600061064384848460405180602001604052806000815250610935565b61098c610cdd565b6006805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000090911681179091556109ef60055473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b610a418383836001611240565b505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107735781811015610b00576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064016106cc565b61077384848484036000611240565b73ffffffffffffffffffffffffffffffffffffffff8316610b5f576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff8216610baf576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b610a41838383611388565b3360009081526007602052604090205460ff1615610c34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e6465722069732062616e6e65640000000000000000000000000000000060448201526064016106cc565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602052604090205460ff1615610801576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f526563697069656e742069732062616e6e65640000000000000000000000000060448201526064016106cc565b6000610cd08484610920565b506105c033858585610dcb565b60055473ffffffffffffffffffffffffffffffffffffffff16331461078b576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff8216610d80576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b61065d60008383611388565b600680547fffffffffffffffffffffffff000000000000000000000000000000000000000016905561080181611533565b6000336105c0818585610b0f565b8273ffffffffffffffffffffffffffffffffffffffff163b600003610e34576040517f14b41af400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016106cc565b6040517f88a7ca5c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906388a7ca5c90610e8c903390889087908790600401611adb565b6020604051808303816000875af1925050508015610ee5575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610ee291810190611b24565b60015b610f74573d808015610f13576040519150601f19603f3d011682016040523d82523d6000602084013e610f18565b606091505b508051600003610f6c576040517f8a96cd9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106cc565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f88a7ca5c0000000000000000000000000000000000000000000000000000000014611007576040517f8a96cd9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106cc565b5050505050565b8273ffffffffffffffffffffffffffffffffffffffff163b600003611077576040517f0778150c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024016106cc565b6040517f7b04a2d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690637b04a2d0906110cd90339086908690600401611b41565b6020604051808303816000875af1925050508015611126575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261112391810190611b24565b60015b6111ad573d808015611154576040519150601f19603f3d011682016040523d82523d6000602084013e611159565b606091505b508051600003610f6c576040517fdeb6d3ed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106cc565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f7b04a2d00000000000000000000000000000000000000000000000000000000014610773576040517fdeb6d3ed00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff8416611290576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff83166112e0576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016106cc565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602090815260408083209387168352929052208290558015610773578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161137a91815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff83166113c05780600260008282546113b59190611b7f565b909155506114729050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015611446576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101829052604481018390526064016106cc565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff821661149b576002805482900390556114c7565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152691815260200190565b60405180910390a3505050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461080157600080fd5b6000602082840312156115ea57600080fd5b81356105e6816115aa565b6000815180845260005b8181101561161b576020818501810151868301820152016115ff565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006105e660208301846115f5565b803573ffffffffffffffffffffffffffffffffffffffff8116811461169057600080fd5b919050565b600080604083850312156116a857600080fd5b6116b18361166c565b946020939093013593505050565b6000806000606084860312156116d457600080fd5b6116dd8461166c565b92506116eb6020850161166c565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261173b57600080fd5b813567ffffffffffffffff80821115611756576117566116fb565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561179c5761179c6116fb565b816040528381528660208588010111156117b557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156117ea57600080fd5b6117f38461166c565b925060208401359150604084013567ffffffffffffffff81111561181657600080fd5b6118228682870161172a565b9150509250925092565b6000806020838503121561183f57600080fd5b823567ffffffffffffffff8082111561185757600080fd5b818501915085601f83011261186b57600080fd5b81358181111561187a57600080fd5b8660208260051b850101111561188f57600080fd5b60209290920196919550909350505050565b6000602082840312156118b357600080fd5b6105e68261166c565b6000806000806000608086880312156118d457600080fd5b6118dd8661166c565b94506118eb6020870161166c565b935060408601359250606086013567ffffffffffffffff8082111561190f57600080fd5b818801915088601f83011261192357600080fd5b81358181111561193257600080fd5b89602082850101111561194457600080fd5b9699959850939650602001949392505050565b6000806000806080858703121561196d57600080fd5b6119768561166c565b93506119846020860161166c565b925060408501359150606085013567ffffffffffffffff8111156119a757600080fd5b6119b38782880161172a565b91505092959194509250565b600080604083850312156119d257600080fd5b6119db8361166c565b91506119e96020840161166c565b90509250929050565b600181811c90821680611a0657607f821691505b602082108103611a3f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ad457611ad4611a74565b5060010190565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611b1a60808301846115f5565b9695505050505050565b600060208284031215611b3657600080fd5b81516105e6816115aa565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000611b7660608301846115f5565b95945050505050565b8082018082111561051a5761051a611a7456fea2646970667358221220c5b3f973ab5f470272694cefbc7f8b4a831c12d63d1b83c51923097bbffcf64464736f6c63430008140033",
    "sourceMap": "712:2199:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:213:0;;;;;;:::i;:::-;;:::i;:::-;;;611:14:27;;604:22;586:41;;574:2;559:18;814:213:0;;;;;;;;2074:89:8;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;:::i;:::-;;:::i;1077:136:0:-;;;;;;:::i;:::-;;:::i;3144:97:8:-;3222:12;;3144:97;;;1956:25:27;;;1944:2;1929:18;3144:97:8;1810:177:27;5039:244:8;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2467:36:27;;2455:2;2440:18;3002:82:8;2325:184:27;2351:145:21;;;;;;:::i;:::-;;:::i;2149:196::-;;;;;;:::i;:::-;;:::i;1138:99::-;;;;;;:::i;:::-;;:::i;:::-;;1648:265;;;;;;:::i;:::-;;:::i;3299:116:8:-;;;;;;:::i;:::-;3390:18;;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:5;;;:::i;1761:229:6:-;;;:::i;1382:260:21:-;;;;;;:::i;:::-;;:::i;189:228:24:-;;;;;;:::i;:::-;378:32;189:228;;;;;;;;;;;5750:66:27;5738:79;;;5720:98;;5708:2;5693:18;189:228:24;5576:248:27;1638:85:5;1710:6;;;;1638:85;;;6005:42:27;5993:55;;;5975:74;;5963:2;5948:18;1638:85:5;5829:226:27;2276:93:8;;;:::i;792:38:21:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1945:170;;;;;;:::i;:::-;;:::i;1750:281:0:-;;;;;;:::i;:::-;;:::i;2275:222::-;;;;;;:::i;:::-;;:::i;1536:164::-;;;;;;:::i;:::-;;:::i;3846:140:8:-;;;;;;:::i;:::-;3952:18;;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;874:99:6;953:13;;;;874:99;;1166:178;;;;;;:::i;:::-;;:::i;814:213:0:-;916:4;939:41;;;954:26;939:41;;:81;;-1:-1:-1;876:25:16;861:40;;;;984:36:0;932:88;814:213;-1:-1:-1;;814:213:0:o;2074:89:8:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:14;4420:31:8;735:10:14;4436:7:8;4445:5;4420:8;:31::i;:::-;-1:-1:-1;4468:4:8;;4293:186;-1:-1:-1;;;4293:186:8:o;1077:136:0:-;1153:4;1176:30;1192:2;1196:5;1176:30;;;;;;;;;;;;:15;:30::i;:::-;1169:37;1077:136;-1:-1:-1;;;1077:136:0:o;5039:244:8:-;5126:4;735:10:14;5182:37:8;5198:4;735:10:14;5213:5:8;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:8;;5039:244;-1:-1:-1;;;;5039:244:8:o;2351:145:21:-;2432:4;2455:34;2470:7;2479:5;2455:34;;;;;;;;;;;;:14;:34::i;2149:196::-;2246:4;2262:20;2279:2;2262:16;:20::i;:::-;2299:39;2321:2;2325:5;2332;2299:21;:39::i;:::-;2292:46;2149:196;-1:-1:-1;;;;2149:196:21:o;1138:99::-;1531:13:5;:11;:13::i;:::-;1211:19:21::1;1217:3;1222:7;1211:5;:19::i;:::-;1138:99:::0;;:::o;1648:265::-;1531:13:5;:11;:13::i;:::-;1733:19:21;1725:51:::1;;;::::0;::::1;::::0;;7511:2:27;1725:51:21::1;::::0;::::1;7493:21:27::0;7550:2;7530:18;;;7523:30;7589:21;7569:18;;;7562:49;7628:18;;1725:51:21::1;;;;;;;;;1798:8:::0;1786:9:::1;1823:84;1847:1;1843;:5;1823:84;;;1891:5;1869:6;:19;1876:8;;1885:1;1876:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1869:19;;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;1869:19:21;:27;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;1850:3;::::1;::::0;::::1;:::i;:::-;;;;1823:84;;;;1715:198;1648:265:::0;;:::o;2293:101:5:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1761:229:6:-;953:13;;735:10:14;;1856:24:6;953:13;1856:24;;1852:96;;1903:34;;;;;6005:42:27;5993:55;;1903:34:6;;;5975:74:27;5948:18;;1903:34:6;5829:226:27;1852:96:6;1957:26;1976:6;1957:18;:26::i;:::-;1803:187;1761:229::o;1382:260:21:-;1531:13:5;:11;:13::i;:::-;1465:19:21;1457:49:::1;;;::::0;::::1;::::0;;8437:2:27;1457:49:21::1;::::0;::::1;8419:21:27::0;8476:2;8456:18;;;8449:30;8515:19;8495:18;;;8488:47;8552:18;;1457:49:21::1;8235:341:27::0;1457:49:21::1;1528:8:::0;1516:9:::1;1553:83;1577:1;1573;:5;1553:83;;;1621:4;1599:6;:19;1606:8;;1615:1;1606:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1599:19;;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;1599:19:21;:26;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;1580:3;::::1;::::0;::::1;:::i;:::-;;;;1553:83;;2276:93:8::0;2323:13;2355:7;2348:14;;;;;:::i;1945:170:21:-;2030:4;2046:20;2063:2;2046:16;:20::i;:::-;2083:25;2098:2;2102:5;2083:14;:25::i;1750:281:0:-;1901:4;1917:29;1930:4;1936:2;1940:5;1917:12;:29::i;:::-;;1956:47;1981:4;1987:2;1991:5;1998:4;1956:24;:47::i;2275:222::-;2374:4;2390:23;2398:7;2407:5;2390:7;:23::i;:::-;;2423:46;2448:7;2457:5;2464:4;2423:24;:46::i;1536:164::-;1630:4;1653:40;1673:4;1679:2;1683:5;1653:40;;;;;;;;;;;;:19;:40::i;1166:178:6:-;1531:13:5;:11;:13::i;:::-;1255::6::1;:24:::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;1319:7:::1;1710:6:5::0;;;;;1638:85;1319:7:6::1;1294:43;;;;;;;;;;;;1166:178:::0;:::o;8989:128:8:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;3952:18;;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10848:17;10828:37;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;;;;8813:42:27;8801:55;;10936:60:8;;;8783:74:27;8873:18;;;8866:34;;;8916:18;;;8909:34;;;8756:18;;10936:60:8;8581:368:27;10881:130:8;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;5739:18;;;5735:86;;5780:30;;;;;5807:1;5780:30;;;5975:74:27;5948:18;;5780:30:8;5829:226:27;5735:86:8;5834:16;;;5830:86;;5873:32;;;;;5902:1;5873:32;;;5975:74:27;5948:18;;5873:32:8;5829:226:27;5830:86:8;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;2739:170:21:-;2817:10;2810:18;;;;:6;:18;;;;;;;;2809:19;2801:48;;;;;;;9156:2:27;2801:48:21;;;9138:21:27;9195:2;9175:18;;;9168:30;9234:18;9214;;;9207:46;9270:18;;2801:48:21;8954:340:27;2801:48:21;2868:10;;;;;;;:6;:10;;;;;;;;2867:11;2859:43;;;;;;;9501:2:27;2859:43:21;;;9483:21:27;9540:2;9520:18;;;9513:30;9579:21;9559:18;;;9552:49;9618:18;;2859:43:21;9299:343:27;1263:223:0;1358:4;1374:19;1383:2;1387:5;1374:8;:19::i;:::-;-1:-1:-1;1403:55:0;735:10:14;1442:2:0;1446:5;1453:4;1403:24;:55::i;1796:162:5:-;1710:6;;1855:23;1710:6;735:10:14;1855:23:5;1851:101;;1901:40;;;;;735:10:14;1901:40:5;;;5975:74:27;5948:18;;1901:40:5;5829:226:27;7721:208:8;7791:21;;;7787:91;;7835:32;;;;;7864:1;7835:32;;;5975:74:27;5948:18;;7835:32:8;5829:226:27;7787:91:8;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;1528:153:6:-;1617:13;1610:20;;;;;;1640:34;1665:8;1640:24;:34::i;3610:178:8:-;3679:4;735:10:14;3733:27:8;735:10:14;3750:2:8;3754:5;3733:9;:27::i;3085:726:0:-;3201:2;:14;;;3219:1;3201:19;3197:79;;3243:22;;;;;6005:42:27;5993:55;;3243:22:0;;;5975:74:27;5948:18;;3243:22:0;5829:226:27;3197:79:0;3290:72;;;;;:39;;;;;;:72;;735:10:14;;3344:4:0;;3350:5;;3357:4;;3290:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3290:72:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3286:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3584:6;:13;3601:1;3584:18;3580:215;;3629:26;;;;;6005:42:27;5993:55;;3629:26:0;;;5975:74:27;5948:18;;3629:26:0;5829:226:27;3580:215:0;3755:6;3749:13;3740:6;3736:2;3732:15;3725:38;3286:519;3405:54;;;3415:44;3405:54;3401:126;;3486:26;;;;;6005:42:27;5993:55;;3486:26:0;;;5975:74:27;5948:18;;3486:26:0;5829:226:27;3401:126:0;3363:174;3085:726;;;;:::o;4305:731::-;4412:7;:19;;;4435:1;4412:24;4408:88;;4459:26;;;;;6005:42:27;5993:55;;4459:26:0;;;5975:74:27;5948:18;;4459:26:0;5829:226:27;4408:88:0;4510:70;;;;;:43;;;;;;:70;;735:10:14;;4568:5:0;;4575:4;;4510:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4510:70:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4506:524;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4805:6;:13;4822:1;4805:18;4801:219;;4850:30;;;;;6005:42:27;5993:55;;4850:30:0;;;5975:74:27;5948:18;;4850:30:0;5829:226:27;4506:524:0;4623:53;;;4633:43;4623:53;4619:129;;4703:30;;;;;6005:42:27;5993:55;;4703:30:0;;;5975:74:27;5948:18;;4703:30:0;5829:226:27;9949:432:8;10061:19;;;10057:89;;10103:32;;;;;10132:1;10103:32;;;5975:74:27;5948:18;;10103:32:8;5829:226:27;10057:89:8;10159:21;;;10155:90;;10203:31;;;;;10231:1;10203:31;;;5975:74:27;5948:18;;10203:31:8;5829:226:27;10155:90:8;10254:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;1956:25:27;;1944:2;1929:18;;1810:177;10333:31:8;;;;;;;;9949:432;;;;:::o;6271:1107::-;6360:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:8;;-1:-1:-1;6356:540:8;;6570:15;;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;;;;8813:42:27;8801:55;;6649:50:8;;;8783:74:27;8873:18;;;8866:34;;;8916:18;;;8909:34;;;8756:18;;6649:50:8;8581:368:27;6599:115:8;6834:15;;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;6910:16;;;6906:425;;7073:12;:21;;;;;;;6906:425;;;7284:13;;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;1956::27;;1944:2;1929:18;;1810:177;7346:25:8;;;;;;;;6271:1107;;;:::o;2912:187:5:-;3004:6;;;;3020:17;;;;;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:27:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:482::-;680:3;718:5;712:12;745:6;740:3;733:19;770:1;780:162;794:6;791:1;788:13;780:162;;;856:4;912:13;;;908:22;;902:29;884:11;;;880:20;;873:59;809:12;780:162;;;784:3;987:1;980:4;971:6;966:3;962:16;958:27;951:38;1109:4;1039:66;1034:2;1026:6;1022:15;1018:88;1013:3;1009:98;1005:109;998:116;;;638:482;;;;:::o;1125:220::-;1274:2;1263:9;1256:21;1237:4;1294:45;1335:2;1324:9;1320:18;1312:6;1294:45;:::i;1350:196::-;1418:20;;1478:42;1467:54;;1457:65;;1447:93;;1536:1;1533;1526:12;1447:93;1350:196;;;:::o;1551:254::-;1619:6;1627;1680:2;1668:9;1659:7;1655:23;1651:32;1648:52;;;1696:1;1693;1686:12;1648:52;1719:29;1738:9;1719:29;:::i;:::-;1709:39;1795:2;1780:18;;;;1767:32;;-1:-1:-1;;;1551:254:27:o;1992:328::-;2069:6;2077;2085;2138:2;2126:9;2117:7;2113:23;2109:32;2106:52;;;2154:1;2151;2144:12;2106:52;2177:29;2196:9;2177:29;:::i;:::-;2167:39;;2225:38;2259:2;2248:9;2244:18;2225:38;:::i;:::-;2215:48;;2310:2;2299:9;2295:18;2282:32;2272:42;;1992:328;;;;;:::o;2514:184::-;2566:77;2563:1;2556:88;2663:4;2660:1;2653:15;2687:4;2684:1;2677:15;2703:777;2745:5;2798:3;2791:4;2783:6;2779:17;2775:27;2765:55;;2816:1;2813;2806:12;2765:55;2852:6;2839:20;2878:18;2915:2;2911;2908:10;2905:36;;;2921:18;;:::i;:::-;3055:2;3049:9;3117:4;3109:13;;2960:66;3105:22;;;3129:2;3101:31;3097:40;3085:53;;;3153:18;;;3173:22;;;3150:46;3147:72;;;3199:18;;:::i;:::-;3239:10;3235:2;3228:22;3274:2;3266:6;3259:18;3320:3;3313:4;3308:2;3300:6;3296:15;3292:26;3289:35;3286:55;;;3337:1;3334;3327:12;3286:55;3401:2;3394:4;3386:6;3382:17;3375:4;3367:6;3363:17;3350:54;3448:1;3441:4;3436:2;3428:6;3424:15;3420:26;3413:37;3468:6;3459:15;;;;;;2703:777;;;;:::o;3485:462::-;3571:6;3579;3587;3640:2;3628:9;3619:7;3615:23;3611:32;3608:52;;;3656:1;3653;3646:12;3608:52;3679:29;3698:9;3679:29;:::i;:::-;3669:39;;3755:2;3744:9;3740:18;3727:32;3717:42;;3810:2;3799:9;3795:18;3782:32;3837:18;3829:6;3826:30;3823:50;;;3869:1;3866;3859:12;3823:50;3892:49;3933:7;3924:6;3913:9;3909:22;3892:49;:::i;:::-;3882:59;;;3485:462;;;;;:::o;3952:615::-;4038:6;4046;4099:2;4087:9;4078:7;4074:23;4070:32;4067:52;;;4115:1;4112;4105:12;4067:52;4155:9;4142:23;4184:18;4225:2;4217:6;4214:14;4211:34;;;4241:1;4238;4231:12;4211:34;4279:6;4268:9;4264:22;4254:32;;4324:7;4317:4;4313:2;4309:13;4305:27;4295:55;;4346:1;4343;4336:12;4295:55;4386:2;4373:16;4412:2;4404:6;4401:14;4398:34;;;4428:1;4425;4418:12;4398:34;4481:7;4476:2;4466:6;4463:1;4459:14;4455:2;4451:23;4447:32;4444:45;4441:65;;;4502:1;4499;4492:12;4441:65;4533:2;4525:11;;;;;4555:6;;-1:-1:-1;3952:615:27;;-1:-1:-1;;;;3952:615:27:o;4572:186::-;4631:6;4684:2;4672:9;4663:7;4659:23;4655:32;4652:52;;;4700:1;4697;4690:12;4652:52;4723:29;4742:9;4723:29;:::i;4763:808::-;4860:6;4868;4876;4884;4892;4945:3;4933:9;4924:7;4920:23;4916:33;4913:53;;;4962:1;4959;4952:12;4913:53;4985:29;5004:9;4985:29;:::i;:::-;4975:39;;5033:38;5067:2;5056:9;5052:18;5033:38;:::i;:::-;5023:48;;5118:2;5107:9;5103:18;5090:32;5080:42;;5173:2;5162:9;5158:18;5145:32;5196:18;5237:2;5229:6;5226:14;5223:34;;;5253:1;5250;5243:12;5223:34;5291:6;5280:9;5276:22;5266:32;;5336:7;5329:4;5325:2;5321:13;5317:27;5307:55;;5358:1;5355;5348:12;5307:55;5398:2;5385:16;5424:2;5416:6;5413:14;5410:34;;;5440:1;5437;5430:12;5410:34;5485:7;5480:2;5471:6;5467:2;5463:15;5459:24;5456:37;5453:57;;;5506:1;5503;5496:12;5453:57;4763:808;;;;-1:-1:-1;4763:808:27;;-1:-1:-1;5537:2:27;5529:11;;5559:6;4763:808;-1:-1:-1;;;4763:808:27:o;6060:537::-;6155:6;6163;6171;6179;6232:3;6220:9;6211:7;6207:23;6203:33;6200:53;;;6249:1;6246;6239:12;6200:53;6272:29;6291:9;6272:29;:::i;:::-;6262:39;;6320:38;6354:2;6343:9;6339:18;6320:38;:::i;:::-;6310:48;;6405:2;6394:9;6390:18;6377:32;6367:42;;6460:2;6449:9;6445:18;6432:32;6487:18;6479:6;6476:30;6473:50;;;6519:1;6516;6509:12;6473:50;6542:49;6583:7;6574:6;6563:9;6559:22;6542:49;:::i;:::-;6532:59;;;6060:537;;;;;;;:::o;6602:260::-;6670:6;6678;6731:2;6719:9;6710:7;6706:23;6702:32;6699:52;;;6747:1;6744;6737:12;6699:52;6770:29;6789:9;6770:29;:::i;:::-;6760:39;;6818:38;6852:2;6841:9;6837:18;6818:38;:::i;:::-;6808:48;;6602:260;;;;;:::o;6867:437::-;6946:1;6942:12;;;;6989;;;7010:61;;7064:4;7056:6;7052:17;7042:27;;7010:61;7117:2;7109:6;7106:14;7086:18;7083:38;7080:218;;7154:77;7151:1;7144:88;7255:4;7252:1;7245:15;7283:4;7280:1;7273:15;7080:218;;6867:437;;;:::o;7657:184::-;7709:77;7706:1;7699:88;7806:4;7803:1;7796:15;7830:4;7827:1;7820:15;7846:184;7898:77;7895:1;7888:88;7995:4;7992:1;7985:15;8019:4;8016:1;8009:15;8035:195;8074:3;8105:66;8098:5;8095:77;8092:103;;8175:18;;:::i;:::-;-1:-1:-1;8222:1:27;8211:13;;8035:195::o;9647:512::-;9841:4;9870:42;9951:2;9943:6;9939:15;9928:9;9921:34;10003:2;9995:6;9991:15;9986:2;9975:9;9971:18;9964:43;;10043:6;10038:2;10027:9;10023:18;10016:34;10086:3;10081:2;10070:9;10066:18;10059:31;10107:46;10148:3;10137:9;10133:19;10125:6;10107:46;:::i;:::-;10099:54;9647:512;-1:-1:-1;;;;;;9647:512:27:o;10164:249::-;10233:6;10286:2;10274:9;10265:7;10261:23;10257:32;10254:52;;;10302:1;10299;10292:12;10254:52;10334:9;10328:16;10353:30;10377:5;10353:30;:::i;10418:409::-;10633:42;10625:6;10621:55;10610:9;10603:74;10713:6;10708:2;10697:9;10693:18;10686:34;10756:2;10751;10740:9;10736:18;10729:30;10584:4;10776:45;10817:2;10806:9;10802:18;10794:6;10776:45;:::i;:::-;10768:53;10418:409;-1:-1:-1;;;;;10418:409:27:o;10832:125::-;10897:9;;;10918:10;;;10915:36;;;10931:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "approveAndCall(address,uint256)": "3177029f",
    "approveAndCall(address,uint256,bytes)": "cae9ca51",
    "balanceOf(address)": "70a08231",
    "banUser(address[])": "7f205499",
    "banned(address)": "9c8d83bb",
    "decimals()": "313ce567",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "onTransferReceived(address,address,uint256,bytes)": "88a7ca5c",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "renounceOwnership()": "715018a6",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAndCall(address,uint256)": "1296ee62",
    "transferAndCall(address,uint256,bytes)": "4000aea0",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferFromAndCall(address,address,uint256)": "d8fbe994",
    "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89",
    "transferOwnership(address)": "f2fde38b",
    "unBanUser(address[])": "4aab6f18"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"intialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1363EOAReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC1363EOASpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC1363InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"}],\"name\":\"banUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"banned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"}],\"name\":\"unBanUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mehdi Rhouzlane\",\"details\":\"This token inherites from ERC1363 and Ownable2Step and integrates a mock ERC1363 receiver.\",\"errors\":{\"ERC1363EOAReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver` as it can't be an EOA. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1363EOASpender(address)\":[{\"details\":\"Indicates a failure with the token `spender` as it can't be an EOA. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1363InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1363InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the token `spender`. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls `onApprovalReceived` on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls `onApprovalReceived` on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"banUser(address[])\":{\"details\":\"reverts if the sender is not the owner\",\"params\":{\"_address\":\"The addresses to ban\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"reverts if the sender is not the owner\",\"params\":{\"_to\":\"The address to mint to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` (i.e. 0x88a7ca5c, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format.\",\"from\":\"The address which are tokens transferred from.\",\"operator\":\"The address which called `transferAndCall` or `transferFromAndCall` function.\",\"value\":\"The amount of tokens transferred.\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` if transfer is allowed unless throwing.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls `onTransferReceived` on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls `onTransferReceived` on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls `onTransferReceived` on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls `onTransferReceived` on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"title\":\"TokenWithSanctions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"banUser(address[])\":{\"notice\":\"Bans the specified addresses\"},\"mint(address,uint256)\":{\"notice\":\"Mints the specified amount of tokens to the specified address\"}},\"notice\":\"Fungible token that allows an admin to ban specified addresses from sending and receiving tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TokenWithSanctions.sol\":\"TokenWithSanctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/math/=lib/prb-math/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc1363-payable-token/=lib/erc1363-payable-token/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\"lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\"lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/\"]},\"sources\":{\"lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol\":{\"keccak256\":\"0x593f3571adaba84a15403e2fb7b403a655dda727849246fb6a543401f202f95b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58c7b55df1d2e18cbf40501a5c74bc8d61136e116557647479656d6cedb48436\",\"dweb:/ipfs/QmSgBiPcFNxs1uukTbdV5jN6uaMQ9YCDL95CZGqz5xH6D5\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol\":{\"keccak256\":\"0xfe5fd5a1cb0239e00808c2170e7d48b27fc0465821fce28d02a0e9211ee8a00c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8711efe0555e3542fc977fab5d5cf076799f42adefde990190372b03a36e059\",\"dweb:/ipfs/QmPQx8RN2zNnuKp9VgEBo4qvrbXMr2Rv5yGZsiCxZtvr8C\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Errors.sol\":{\"keccak256\":\"0x89ae183ae6db6e5a4d8e6ef42daae88745b626af99e63aa900e934fb19a629bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e5dc1334f866c55e61bf64b3fdfae40076e3e0f8f0a5dd3e666310dec70ce4\",\"dweb:/ipfs/QmezuskExcDYptsyAMKxtyUtq6Xb8FBnFCTNu3fwa5zReZ\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol\":{\"keccak256\":\"0x3f836d0846d5f46f3d9154342833d28ea04ab48007f8b29631fcd9fd47b3a846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96f26b167a755f248556c71fd0ff4e6efb3b96971f5cb72a5515fd192c8c3e6e\",\"dweb:/ipfs/QmPkH4jrgR4fs5DxAoQVesAMz1MjZK9yNPtm38XBQCaz2S\"]},\"lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol\":{\"keccak256\":\"0x8391ca93a7573968d18570667170f961ab104b0ab0d1f99359a22a6c63ea4c6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d38143b2a6155c0667b4f8520db7d2ef81fc6f9465c9733211c65bd128576d7b\",\"dweb:/ipfs/QmexBf1LecbszwtooXvx5HNe2nNeDxh8H5usjwYf2AmtoX\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48\",\"dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/TokenWithSanctions.sol\":{\"keccak256\":\"0x32aded7897a6710481b49c972a22eb3b4c512305e7fde80f1badb8710e8ef0f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://901fc7cffc143e05ace03da36eb6f363067af9ef930c1abfe7ab28c0a0dc5db1\",\"dweb:/ipfs/QmNnmAQd8mvRc5TYSqajVDf5gUUYtXFayqLYX3U5FCm6Pb\"]},\"src/mocks/MockReceiver.sol\":{\"keccak256\":\"0x47d10cfdb07713028d48d21f5feb79031c0673ae6712ef6c705b6766a02c422b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6501b157c01ea5eb7054ddab9a2294a54c8b8c9ff5f12329b7160d26b1e515ff\",\"dweb:/ipfs/QmPqSvE8tsxGuG54wvAAYhAoEgwhnTV5Ktk5e8Y49zFhpt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "intialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1363EOAReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1363EOASpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1363InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1363InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_address",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "banUser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "banned",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onTransferReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFromAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFromAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_address",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unBanUser"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "approveAndCall(address,uint256)": {
            "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls `onApprovalReceived` on `spender`.",
            "params": {
              "spender": "The address which will spend the funds.",
              "value": "The amount of tokens to be spent."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "approveAndCall(address,uint256,bytes)": {
            "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls `onApprovalReceived` on `spender`.",
            "params": {
              "data": "Additional data with no specified format, sent in call to `spender`.",
              "spender": "The address which will spend the funds.",
              "value": "The amount of tokens to be spent."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "banUser(address[])": {
            "details": "reverts if the sender is not the owner",
            "params": {
              "_address": "The addresses to ban"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "mint(address,uint256)": {
            "details": "reverts if the sender is not the owner",
            "params": {
              "_to": "The address to mint to"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "onTransferReceived(address,address,uint256,bytes)": {
            "details": "Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` (i.e. 0x88a7ca5c, or its own function selector).",
            "params": {
              "data": "Additional data with no specified format.",
              "from": "The address which are tokens transferred from.",
              "operator": "The address which called `transferAndCall` or `transferFromAndCall` function.",
              "value": "The amount of tokens transferred."
            },
            "returns": {
              "_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferAndCall(address,uint256)": {
            "details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls `onTransferReceived` on `to`.",
            "params": {
              "to": "The address which you want to transfer to.",
              "value": "The amount of tokens to be transferred."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "transferAndCall(address,uint256,bytes)": {
            "details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls `onTransferReceived` on `to`.",
            "params": {
              "data": "Additional data with no specified format, sent in call to `to`.",
              "to": "The address which you want to transfer to.",
              "value": "The amount of tokens to be transferred."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferFromAndCall(address,address,uint256)": {
            "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls `onTransferReceived` on `to`.",
            "params": {
              "from": "The address which you want to send tokens from.",
              "to": "The address which you want to transfer to.",
              "value": "The amount of tokens to be transferred."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "transferFromAndCall(address,address,uint256,bytes)": {
            "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls `onTransferReceived` on `to`.",
            "params": {
              "data": "Additional data with no specified format, sent in call to `to`.",
              "from": "The address which you want to send tokens from.",
              "to": "The address which you want to transfer to.",
              "value": "The amount of tokens to be transferred."
            },
            "returns": {
              "_0": "A boolean value indicating whether the operation succeeded unless throwing."
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "banUser(address[])": {
            "notice": "Bans the specified addresses"
          },
          "mint(address,uint256)": {
            "notice": "Mints the specified amount of tokens to the specified address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/math/=lib/prb-math/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc1363-payable-token/=lib/erc1363-payable-token/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "prb-math/=lib/prb-math/src/",
        "prb-test/=lib/prb-math/lib/prb-test/src/",
        "lib/openzeppelin-contracts:@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "lib/prb-math:@prb/test/=lib/prb-math/lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/TokenWithSanctions.sol": "TokenWithSanctions"
      },
      "libraries": {}
    },
    "sources": {
      "lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol": {
        "keccak256": "0x593f3571adaba84a15403e2fb7b403a655dda727849246fb6a543401f202f95b",
        "urls": [
          "bzz-raw://58c7b55df1d2e18cbf40501a5c74bc8d61136e116557647479656d6cedb48436",
          "dweb:/ipfs/QmSgBiPcFNxs1uukTbdV5jN6uaMQ9YCDL95CZGqz5xH6D5"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol": {
        "keccak256": "0xfe5fd5a1cb0239e00808c2170e7d48b27fc0465821fce28d02a0e9211ee8a00c",
        "urls": [
          "bzz-raw://c8711efe0555e3542fc977fab5d5cf076799f42adefde990190372b03a36e059",
          "dweb:/ipfs/QmPQx8RN2zNnuKp9VgEBo4qvrbXMr2Rv5yGZsiCxZtvr8C"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Errors.sol": {
        "keccak256": "0x89ae183ae6db6e5a4d8e6ef42daae88745b626af99e63aa900e934fb19a629bd",
        "urls": [
          "bzz-raw://c9e5dc1334f866c55e61bf64b3fdfae40076e3e0f8f0a5dd3e666310dec70ce4",
          "dweb:/ipfs/QmezuskExcDYptsyAMKxtyUtq6Xb8FBnFCTNu3fwa5zReZ"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol": {
        "keccak256": "0x3f836d0846d5f46f3d9154342833d28ea04ab48007f8b29631fcd9fd47b3a846",
        "urls": [
          "bzz-raw://96f26b167a755f248556c71fd0ff4e6efb3b96971f5cb72a5515fd192c8c3e6e",
          "dweb:/ipfs/QmPkH4jrgR4fs5DxAoQVesAMz1MjZK9yNPtm38XBQCaz2S"
        ],
        "license": "MIT"
      },
      "lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol": {
        "keccak256": "0x8391ca93a7573968d18570667170f961ab104b0ab0d1f99359a22a6c63ea4c6f",
        "urls": [
          "bzz-raw://d38143b2a6155c0667b4f8520db7d2ef81fc6f9465c9733211c65bd128576d7b",
          "dweb:/ipfs/QmexBf1LecbszwtooXvx5HNe2nNeDxh8H5usjwYf2AmtoX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688",
        "urls": [
          "bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48",
          "dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "src/TokenWithSanctions.sol": {
        "keccak256": "0x32aded7897a6710481b49c972a22eb3b4c512305e7fde80f1badb8710e8ef0f9",
        "urls": [
          "bzz-raw://901fc7cffc143e05ace03da36eb6f363067af9ef930c1abfe7ab28c0a0dc5db1",
          "dweb:/ipfs/QmNnmAQd8mvRc5TYSqajVDf5gUUYtXFayqLYX3U5FCm6Pb"
        ],
        "license": "UNLICENSED"
      },
      "src/mocks/MockReceiver.sol": {
        "keccak256": "0x47d10cfdb07713028d48d21f5feb79031c0673ae6712ef6c705b6766a02c422b",
        "urls": [
          "bzz-raw://6501b157c01ea5eb7054ddab9a2294a54c8b8c9ff5f12329b7160d26b1e515ff",
          "dweb:/ipfs/QmPqSvE8tsxGuG54wvAAYhAoEgwhnTV5Ktk5e8Y49zFhpt"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/TokenWithSanctions.sol",
    "id": 2911,
    "exportedSymbols": {
      "ERC1363": [
        319
      ],
      "ERC165": [
        2143
      ],
      "ERC20": [
        1345
      ],
      "IERC1363": [
        401
      ],
      "IERC1363Errors": [
        425
      ],
      "IERC1363Receiver": [
        443
      ],
      "IERC1363Spender": [
        459
      ],
      "IERC165": [
        2155
      ],
      "IERC20": [
        1423
      ],
      "MockERC1363Receiver": [
        3223
      ],
      "Ownable": [
        607
      ],
      "Ownable2Step": [
        693
      ],
      "TokenWithSanctions": [
        2910
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2873:21",
    "nodes": [
      {
        "id": 2680,
        "nodeType": "PragmaDirective",
        "src": "39:24:21",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 2682,
        "nodeType": "ImportDirective",
        "src": "65:77:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2911,
        "sourceUnit": 694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2681,
              "name": "Ownable2Step",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 693,
              "src": "73:12:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2684,
        "nodeType": "ImportDirective",
        "src": "143:67:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2911,
        "sourceUnit": 608,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2683,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 607,
              "src": "151:7:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2686,
        "nodeType": "ImportDirective",
        "src": "211:61:21",
        "nodes": [],
        "absolutePath": "src/mocks/MockReceiver.sol",
        "file": "./mocks/MockReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2911,
        "sourceUnit": 3224,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2685,
              "name": "MockERC1363Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3223,
              "src": "219:19:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2687,
        "nodeType": "ImportDirective",
        "src": "273:67:21",
        "nodes": [],
        "absolutePath": "lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "file": "erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2911,
        "sourceUnit": 320,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2689,
        "nodeType": "ImportDirective",
        "src": "341:70:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2911,
        "sourceUnit": 1424,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2688,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1423,
              "src": "349:6:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2910,
        "nodeType": "ContractDefinition",
        "src": "712:2199:21",
        "nodes": [
          {
            "id": 2700,
            "nodeType": "VariableDeclaration",
            "src": "792:38:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "9c8d83bb",
            "mutability": "mutable",
            "name": "banned",
            "nameLocation": "824:6:21",
            "scope": 2910,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2699,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2697,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "800:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "792:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2698,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "811:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2718,
            "nodeType": "FunctionDefinition",
            "src": "837:126:21",
            "nodes": [],
            "body": {
              "id": 2717,
              "nodeType": "Block",
              "src": "918:45:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2713,
                        "name": "intialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2702,
                        "src": "934:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 2714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "947:8:21",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "id": 2712,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "928:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2716,
                  "nodeType": "ExpressionStatement",
                  "src": "928:28:21"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "52617265536b696c6c73",
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "876:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6373a69c52f8f41995c622e1436da46f2fb06893c42e72f8f004647795058922",
                      "typeString": "literal_string \"RareSkills\""
                    },
                    "value": "RareSkills"
                  },
                  {
                    "hexValue": "52534b",
                    "id": 2706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "890:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_80553b6b348ae45ab8e8bf75e77064818c0a772f13cf8d3a175d3815aec59b56",
                      "typeString": "literal_string \"RSK\""
                    },
                    "value": "RSK"
                  }
                ],
                "id": 2707,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2704,
                  "name": "ERC20",
                  "nameLocations": [
                    "870:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1345,
                  "src": "870:5:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "870:26:21"
              },
              {
                "arguments": [
                  {
                    "id": 2709,
                    "name": "intialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2702,
                    "src": "905:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2710,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2708,
                  "name": "Ownable",
                  "nameLocations": [
                    "897:7:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 607,
                  "src": "897:7:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "897:20:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "intialOwner",
                  "nameLocation": "857:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2718,
                  "src": "849:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "848:21:21"
            },
            "returnParameters": {
              "id": 2711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "918:0:21"
            },
            "scope": 2910,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2734,
            "nodeType": "FunctionDefinition",
            "src": "1138:99:21",
            "nodes": [],
            "body": {
              "id": 2733,
              "nodeType": "Block",
              "src": "1201:36:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2729,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2721,
                        "src": "1217:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2730,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "1222:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2728,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "1211:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1211:19:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2732,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:19:21"
                }
              ]
            },
            "documentation": {
              "id": 2719,
              "nodeType": "StructuredDocumentation",
              "src": "969:164:21",
              "text": "@notice Mints the specified amount of tokens to the specified address\n@dev reverts if the sender is not the owner\n@param _to The address to mint to"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2726,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2725,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1191:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 518,
                  "src": "1191:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1191:9:21"
              }
            ],
            "name": "mint",
            "nameLocation": "1147:4:21",
            "parameters": {
              "id": 2724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1160:3:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2734,
                  "src": "1152:11:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1173:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2734,
                  "src": "1165:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:30:21"
            },
            "returnParameters": {
              "id": 2727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:0:21"
            },
            "scope": 2910,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2777,
            "nodeType": "FunctionDefinition",
            "src": "1382:260:21",
            "nodes": [],
            "body": {
              "id": 2776,
              "nodeType": "Block",
              "src": "1447:195:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2744,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2738,
                            "src": "1465:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 2745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1474:6:21",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1465:15:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1483:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1465:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206164647265737320746f2062616e",
                        "id": 2748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53c0d8eb063f843d1ba34761290cffdf8f54345e316c2d74fe36db31df00cc44",
                          "typeString": "literal_string \"No address to ban\""
                        },
                        "value": "No address to ban"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53c0d8eb063f843d1ba34761290cffdf8f54345e316c2d74fe36db31df00cc44",
                          "typeString": "literal_string \"No address to ban\""
                        }
                      ],
                      "id": 2743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1457:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:49:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2750,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:49:21"
                },
                {
                  "assignments": [
                    2752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2752,
                      "mutability": "mutable",
                      "name": "l",
                      "nameLocation": "1524:1:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2776,
                      "src": "1516:9:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2751,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1516:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2755,
                  "initialValue": {
                    "expression": {
                      "id": 2753,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2738,
                      "src": "1528:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 2754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1537:6:21",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1528:15:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1516:27:21"
                },
                {
                  "body": {
                    "id": 2774,
                    "nodeType": "Block",
                    "src": "1585:51:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 2772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2766,
                              "name": "banned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2700,
                              "src": "1599:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2770,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2767,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2738,
                                "src": "1606:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 2769,
                              "indexExpression": {
                                "id": 2768,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2757,
                                "src": "1615:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1606:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1599:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1621:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1599:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2773,
                        "nodeType": "ExpressionStatement",
                        "src": "1599:26:21"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2760,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2757,
                      "src": "1573:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2761,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2752,
                      "src": "1577:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1573:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2775,
                  "initializationExpression": {
                    "assignments": [
                      2757
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2757,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1566:1:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2775,
                        "src": "1558:9:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1558:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2759,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1570:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1558:13:21"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1580:3:21",
                      "subExpression": {
                        "id": 2763,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2757,
                        "src": "1580:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2765,
                    "nodeType": "ExpressionStatement",
                    "src": "1580:3:21"
                  },
                  "nodeType": "ForStatement",
                  "src": "1553:83:21"
                }
              ]
            },
            "documentation": {
              "id": 2735,
              "nodeType": "StructuredDocumentation",
              "src": "1243:134:21",
              "text": "@notice Bans the specified addresses\n@dev reverts if the sender is not the owner\n@param _address The addresses to ban"
            },
            "functionSelector": "7f205499",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2741,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2740,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1437:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 518,
                  "src": "1437:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1437:9:21"
              }
            ],
            "name": "banUser",
            "nameLocation": "1391:7:21",
            "parameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1418:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "1399:27:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2736,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1399:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2737,
                    "nodeType": "ArrayTypeName",
                    "src": "1399:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:29:21"
            },
            "returnParameters": {
              "id": 2742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1447:0:21"
            },
            "scope": 2910,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2819,
            "nodeType": "FunctionDefinition",
            "src": "1648:265:21",
            "nodes": [],
            "body": {
              "id": 2818,
              "nodeType": "Block",
              "src": "1715:198:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2786,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2780,
                            "src": "1733:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 2787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1742:6:21",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1733:15:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1751:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1733:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206164647265737320746f20756e62616e",
                        "id": 2790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1754:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be7c370b42925c9e18e8bc2c8d3cc43bf8f73a379fd8c7fa7527f324e537d772",
                          "typeString": "literal_string \"No address to unban\""
                        },
                        "value": "No address to unban"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be7c370b42925c9e18e8bc2c8d3cc43bf8f73a379fd8c7fa7527f324e537d772",
                          "typeString": "literal_string \"No address to unban\""
                        }
                      ],
                      "id": 2785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1725:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:51:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2792,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:51:21"
                },
                {
                  "assignments": [
                    2794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2794,
                      "mutability": "mutable",
                      "name": "l",
                      "nameLocation": "1794:1:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2818,
                      "src": "1786:9:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1786:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2797,
                  "initialValue": {
                    "expression": {
                      "id": 2795,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2780,
                      "src": "1798:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 2796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1807:6:21",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1798:15:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1786:27:21"
                },
                {
                  "body": {
                    "id": 2816,
                    "nodeType": "Block",
                    "src": "1855:52:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 2814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2808,
                              "name": "banned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2700,
                              "src": "1869:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2812,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 2809,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2780,
                                "src": "1876:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 2811,
                              "indexExpression": {
                                "id": 2810,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2799,
                                "src": "1885:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1876:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1869:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1891:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1869:27:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2815,
                        "nodeType": "ExpressionStatement",
                        "src": "1869:27:21"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2802,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2799,
                      "src": "1843:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2803,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2794,
                      "src": "1847:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1843:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2817,
                  "initializationExpression": {
                    "assignments": [
                      2799
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2799,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1836:1:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2817,
                        "src": "1828:9:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2798,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1828:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2801,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1840:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1828:13:21"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1850:3:21",
                      "subExpression": {
                        "id": 2805,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2799,
                        "src": "1850:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2807,
                    "nodeType": "ExpressionStatement",
                    "src": "1850:3:21"
                  },
                  "nodeType": "ForStatement",
                  "src": "1823:84:21"
                }
              ]
            },
            "functionSelector": "4aab6f18",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2783,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2782,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1705:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 518,
                  "src": "1705:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1705:9:21"
              }
            ],
            "name": "unBanUser",
            "nameLocation": "1657:9:21",
            "parameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2780,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1686:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2819,
                  "src": "1667:27:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2778,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1667:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2779,
                    "nodeType": "ArrayTypeName",
                    "src": "1667:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1666:29:21"
            },
            "returnParameters": {
              "id": 2784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1715:0:21"
            },
            "scope": 2910,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2843,
            "nodeType": "FunctionDefinition",
            "src": "1945:170:21",
            "nodes": [],
            "body": {
              "id": 2842,
              "nodeType": "Block",
              "src": "2036:79:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2833,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2822,
                        "src": "2063:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2832,
                      "name": "checkBlacklisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2909,
                      "src": "2046:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 2834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:20:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2835,
                  "nodeType": "ExpressionStatement",
                  "src": "2046:20:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2838,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2822,
                        "src": "2098:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2839,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2824,
                        "src": "2102:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2836,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2083:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TokenWithSanctions_$2910_$",
                          "typeString": "type(contract super TokenWithSanctions)"
                        }
                      },
                      "id": 2837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2089:8:21",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 955,
                      "src": "2083:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 2840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2083:25:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2831,
                  "id": 2841,
                  "nodeType": "Return",
                  "src": "2076:32:21"
                }
              ]
            },
            "baseFunctions": [
              955,
              1390
            ],
            "documentation": {
              "id": 2820,
              "nodeType": "StructuredDocumentation",
              "src": "1919:21:21",
              "text": "@inheritdoc ERC20"
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1954:8:21",
            "overrides": {
              "id": 2828,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2826,
                  "name": "ERC20",
                  "nameLocations": [
                    "2006:5:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1345,
                  "src": "2006:5:21"
                },
                {
                  "id": 2827,
                  "name": "IERC20",
                  "nameLocations": [
                    "2013:6:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1423,
                  "src": "2013:6:21"
                }
              ],
              "src": "1997:23:21"
            },
            "parameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2822,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1971:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2843,
                  "src": "1963:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2824,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1983:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2843,
                  "src": "1975:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1962:27:21"
            },
            "returnParameters": {
              "id": 2831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2843,
                  "src": "2030:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2829,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:6:21"
            },
            "scope": 2910,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2868,
            "nodeType": "FunctionDefinition",
            "src": "2149:196:21",
            "nodes": [],
            "body": {
              "id": 2867,
              "nodeType": "Block",
              "src": "2252:93:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2857,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2846,
                        "src": "2279:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2856,
                      "name": "checkBlacklisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2909,
                      "src": "2262:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 2858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2262:20:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2859,
                  "nodeType": "ExpressionStatement",
                  "src": "2262:20:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2862,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2846,
                        "src": "2321:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2863,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "2325:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2864,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2850,
                        "src": "2332:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2860,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2299:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TokenWithSanctions_$2910_$",
                          "typeString": "type(contract super TokenWithSanctions)"
                        }
                      },
                      "id": 2861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2305:15:21",
                      "memberName": "transferAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "2299:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 2865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2855,
                  "id": 2866,
                  "nodeType": "Return",
                  "src": "2292:46:21"
                }
              ]
            },
            "baseFunctions": [
              92
            ],
            "documentation": {
              "id": 2844,
              "nodeType": "StructuredDocumentation",
              "src": "2121:23:21",
              "text": "@inheritdoc ERC1363"
            },
            "functionSelector": "4000aea0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nameLocation": "2158:15:21",
            "overrides": {
              "id": 2852,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2228:8:21"
            },
            "parameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2846,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2182:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2868,
                  "src": "2174:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2848,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2194:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2868,
                  "src": "2186:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2850,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2214:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2868,
                  "src": "2201:18:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2849,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2173:47:21"
            },
            "returnParameters": {
              "id": 2855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2868,
                  "src": "2246:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2245:6:21"
            },
            "scope": 2910,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2885,
            "nodeType": "FunctionDefinition",
            "src": "2351:145:21",
            "nodes": [],
            "body": {
              "id": 2884,
              "nodeType": "Block",
              "src": "2438:58:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2879,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2870,
                        "src": "2470:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2880,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2872,
                        "src": "2479:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2486:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2878,
                      "name": "approveAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2885,
                        185
                      ],
                      "referencedDeclaration": 185,
                      "src": "2455:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 2882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2455:34:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2877,
                  "id": 2883,
                  "nodeType": "Return",
                  "src": "2448:41:21"
                }
              ]
            },
            "baseFunctions": [
              159
            ],
            "functionSelector": "3177029f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nameLocation": "2360:14:21",
            "overrides": {
              "id": 2874,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2414:8:21"
            },
            "parameters": {
              "id": 2873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2870,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2383:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2885,
                  "src": "2375:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2872,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2400:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2885,
                  "src": "2392:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2392:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2374:32:21"
            },
            "returnParameters": {
              "id": 2877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2885,
                  "src": "2432:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2875,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2432:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2431:6:21"
            },
            "scope": 2910,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2909,
            "nodeType": "FunctionDefinition",
            "src": "2739:170:21",
            "nodes": [],
            "body": {
              "id": 2908,
              "nodeType": "Block",
              "src": "2791:118:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2809:19:21",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2892,
                            "name": "banned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2700,
                            "src": "2810:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2895,
                          "indexExpression": {
                            "expression": {
                              "id": 2893,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2817:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2821:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2817:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2810:18:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e6465722069732062616e6e6564",
                        "id": 2897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2830:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd393ec34adce997bb469eeb412c54ce6ecb7922c6dba70fbb33d53480368b91",
                          "typeString": "literal_string \"Sender is banned\""
                        },
                        "value": "Sender is banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd393ec34adce997bb469eeb412c54ce6ecb7922c6dba70fbb33d53480368b91",
                          "typeString": "literal_string \"Sender is banned\""
                        }
                      ],
                      "id": 2891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2801:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:48:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2899,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:48:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2867:11:21",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2901,
                            "name": "banned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2700,
                            "src": "2868:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2903,
                          "indexExpression": {
                            "id": 2902,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2888,
                            "src": "2875:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2868:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526563697069656e742069732062616e6e6564",
                        "id": 2905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2880:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56401d07cbc38095331db71da3f2f9d102a32f805935988396fda229cbe21ae0",
                          "typeString": "literal_string \"Recipient is banned\""
                        },
                        "value": "Recipient is banned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56401d07cbc38095331db71da3f2f9d102a32f805935988396fda229cbe21ae0",
                          "typeString": "literal_string \"Recipient is banned\""
                        }
                      ],
                      "id": 2900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2859:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2859:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2907,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:43:21"
                }
              ]
            },
            "documentation": {
              "id": 2886,
              "nodeType": "StructuredDocumentation",
              "src": "2502:232:21",
              "text": "@notice Checks if the sender and the recipient are banned\n @dev reverts if the sender is banned\n @dev reverts if the recipient is banned\n @dev msg.sender is the sender\n @param to The recipient address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBlacklisted",
            "nameLocation": "2748:16:21",
            "parameters": {
              "id": 2889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2888,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2773:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2909,
                  "src": "2765:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2764:12:21"
            },
            "returnParameters": {
              "id": 2890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2791:0:21"
            },
            "scope": 2910,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2691,
              "name": "ERC1363",
              "nameLocations": [
                "743:7:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 319,
              "src": "743:7:21"
            },
            "id": 2692,
            "nodeType": "InheritanceSpecifier",
            "src": "743:7:21"
          },
          {
            "baseName": {
              "id": 2693,
              "name": "Ownable2Step",
              "nameLocations": [
                "752:12:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 693,
              "src": "752:12:21"
            },
            "id": 2694,
            "nodeType": "InheritanceSpecifier",
            "src": "752:12:21"
          },
          {
            "baseName": {
              "id": 2695,
              "name": "MockERC1363Receiver",
              "nameLocations": [
                "766:19:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3223,
              "src": "766:19:21"
            },
            "id": 2696,
            "nodeType": "InheritanceSpecifier",
            "src": "766:19:21"
          }
        ],
        "canonicalName": "TokenWithSanctions",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2690,
          "nodeType": "StructuredDocumentation",
          "src": "413:268:21",
          "text": "@title TokenWithSanctions\n @author Mehdi Rhouzlane\n @notice Fungible token that allows an admin to ban specified addresses from sending and receiving tokens.\n @dev This token inherites from ERC1363 and Ownable2Step and integrates a mock ERC1363 receiver."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2910,
          3223,
          443,
          693,
          607,
          319,
          425,
          401,
          2143,
          2155,
          1345,
          735,
          1449,
          1423,
          2050
        ],
        "name": "TokenWithSanctions",
        "nameLocation": "721:18:21",
        "scope": 2911,
        "usedErrors": [
          409,
          414,
          419,
          424,
          473,
          478,
          705,
          710,
          715,
          724,
          729,
          734
        ],
        "usedEvents": [
          484,
          622,
          1357,
          1366
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 21
}